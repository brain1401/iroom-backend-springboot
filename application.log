To honour the JVM settings for this build a single-use Daemon process will be forked. For more on this, please refer to https://docs.gradle.org/8.14.3/userguide/gradle_daemon.html#sec:disabling_the_daemon in the Gradle documentation.
Daemon will be stopped at the end of the build 
> Task :compileJava
> Task :processResources UP-TO-DATE
> Task :classes
> Task :resolveMainClassName

> Task :bootRun
Standard Commons Logging discovery in action with spring-jcl: please remove commons-logging.jar from classpath in order to avoid potential conflicts
Standard Commons Logging discovery in action with spring-jcl: please remove commons-logging.jar from classpath in order to avoid potential conflicts
21:28:54,364 |-WARN in ch.qos.logback.core.joran.action.ConversionRuleAction - [converterClass] attribute is deprecated and replaced by [class]. See element [conversionRule] near line 11
21:28:54,365 |-WARN in ch.qos.logback.core.joran.action.ConversionRuleAction - [converterClass] attribute is deprecated and replaced by [class]. See element [conversionRule] near line 13
21:28:54,365 |-WARN in ch.qos.logback.core.joran.action.ConversionRuleAction - [converterClass] attribute is deprecated and replaced by [class]. See element [conversionRule] near line 15

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/

[32m :: Spring Boot :: [39m              [2m (v3.5.4)[0;39m

[[2m2025-09-01 21:28:54.469[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[kground-preinit][0;39m [36mo.h.validator.internal.util.Version     [0;39m [2m:[0;39m HV000001: Hibernate Validator 8.0.2.Final
[[2m2025-09-01 21:28:54.494[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mc.i.s.SpringBackendApplication          [0;39m [2m:[0;39m Starting SpringBackendApplication using Java 21.0.8 with PID 3096282 (/home/aiden/programming/final-project/iroom-backend-springboot/build/classes/java/main started by aiden in /home/aiden/programming/final-project/iroom-backend-springboot)
[[2m2025-09-01 21:28:54.494[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mc.i.s.SpringBackendApplication          [0;39m [2m:[0;39m Running with Spring Boot v3.5.4, Spring v6.2.9
[[2m2025-09-01 21:28:54.495[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mc.i.s.SpringBackendApplication          [0;39m [2m:[0;39m The following 1 profile is active: "test-local"
[[2m2025-09-01 21:28:54.525[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.e.DevToolsPropertyDefaultsPostProcessor[0;39m [2m:[0;39m Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[[2m2025-09-01 21:28:54.525[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.e.DevToolsPropertyDefaultsPostProcessor[0;39m [2m:[0;39m For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[[2m2025-09-01 21:28:55.182[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.s.d.r.c.RepositoryConfigurationDelegate[0;39m [2m:[0;39m Multiple Spring Data modules found, entering strict repository configuration mode
[[2m2025-09-01 21:28:55.183[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.s.d.r.c.RepositoryConfigurationDelegate[0;39m [2m:[0;39m Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[[2m2025-09-01 21:28:55.300[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.s.d.r.c.RepositoryConfigurationDelegate[0;39m [2m:[0;39m Finished Spring Data repository scanning in 110 ms. Found 16 JPA repository interfaces.
[[2m2025-09-01 21:28:55.310[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.s.d.r.c.RepositoryConfigurationDelegate[0;39m [2m:[0;39m Multiple Spring Data modules found, entering strict repository configuration mode
[[2m2025-09-01 21:28:55.311[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.s.d.r.c.RepositoryConfigurationDelegate[0;39m [2m:[0;39m Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[[2m2025-09-01 21:28:55.323[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.RepositoryConfigurationExtensionSupport[0;39m [2m:[0;39m Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.iroomclass.springbackend.domain.curriculum.repository.UnitCategoryRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[[2m2025-09-01 21:28:55.324[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.RepositoryConfigurationExtensionSupport[0;39m [2m:[0;39m Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.iroomclass.springbackend.domain.curriculum.repository.UnitRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[[2m2025-09-01 21:28:55.324[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.RepositoryConfigurationExtensionSupport[0;39m [2m:[0;39m Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.iroomclass.springbackend.domain.curriculum.repository.UnitSubcategoryRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[[2m2025-09-01 21:28:55.324[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.RepositoryConfigurationExtensionSupport[0;39m [2m:[0;39m Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.iroomclass.springbackend.domain.exam.repository.ExamDocumentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[[2m2025-09-01 21:28:55.324[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.RepositoryConfigurationExtensionSupport[0;39m [2m:[0;39m Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.iroomclass.springbackend.domain.exam.repository.ExamRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[[2m2025-09-01 21:28:55.324[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.RepositoryConfigurationExtensionSupport[0;39m [2m:[0;39m Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.iroomclass.springbackend.domain.exam.repository.ExamResultRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[[2m2025-09-01 21:28:55.325[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.RepositoryConfigurationExtensionSupport[0;39m [2m:[0;39m Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.iroomclass.springbackend.domain.exam.repository.ExamSheetQuestionRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[[2m2025-09-01 21:28:55.325[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.RepositoryConfigurationExtensionSupport[0;39m [2m:[0;39m Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.iroomclass.springbackend.domain.exam.repository.ExamSheetRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[[2m2025-09-01 21:28:55.325[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.RepositoryConfigurationExtensionSupport[0;39m [2m:[0;39m Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.iroomclass.springbackend.domain.exam.repository.ExamSheetSelectedUnitRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[[2m2025-09-01 21:28:55.325[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.RepositoryConfigurationExtensionSupport[0;39m [2m:[0;39m Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.iroomclass.springbackend.domain.exam.repository.ExamSubmissionRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[[2m2025-09-01 21:28:55.325[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.RepositoryConfigurationExtensionSupport[0;39m [2m:[0;39m Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.iroomclass.springbackend.domain.exam.repository.QuestionRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[[2m2025-09-01 21:28:55.326[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.RepositoryConfigurationExtensionSupport[0;39m [2m:[0;39m Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.iroomclass.springbackend.domain.exam.repository.QuestionResultRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[[2m2025-09-01 21:28:55.326[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.RepositoryConfigurationExtensionSupport[0;39m [2m:[0;39m Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.iroomclass.springbackend.domain.exam.repository.StudentAnswerSheetRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[[2m2025-09-01 21:28:55.326[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.RepositoryConfigurationExtensionSupport[0;39m [2m:[0;39m Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.iroomclass.springbackend.domain.user.repository.StudentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[[2m2025-09-01 21:28:55.326[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.RepositoryConfigurationExtensionSupport[0;39m [2m:[0;39m Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.iroomclass.springbackend.domain.user.repository.TeacherRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[[2m2025-09-01 21:28:55.327[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.RepositoryConfigurationExtensionSupport[0;39m [2m:[0;39m Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.iroomclass.springbackend.domain.user.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[[2m2025-09-01 21:28:55.328[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.s.d.r.c.RepositoryConfigurationDelegate[0;39m [2m:[0;39m Finished Spring Data repository scanning in 11 ms. Found 0 Redis repository interfaces.
[[2m2025-09-01 21:28:55.726[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.b.w.embedded.tomcat.TomcatWebServer [0;39m [2m:[0;39m Tomcat initialized with port 3055 (http)
[[2m2025-09-01 21:28:55.734[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.coyote.http11.Http11NioProtocol     [0;39m [2m:[0;39m Initializing ProtocolHandler ["http-nio-3055"]
[[2m2025-09-01 21:28:55.735[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.apache.catalina.core.StandardService  [0;39m [2m:[0;39m Starting service [Tomcat]
[[2m2025-09-01 21:28:55.735[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.apache.catalina.core.StandardEngine   [0;39m [2m:[0;39m Starting Servlet engine: [Apache Tomcat/10.1.43]
[[2m2025-09-01 21:28:55.762[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.c.c.C.[Tomcat].[localhost].[/api]   [0;39m [2m:[0;39m Initializing Spring embedded WebApplicationContext
[[2m2025-09-01 21:28:55.762[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mw.s.c.ServletWebServerApplicationContext[0;39m [2m:[0;39m Root WebApplicationContext: initialization completed in 1236 ms
Standard Commons Logging discovery in action with spring-jcl: please remove commons-logging.jar from classpath in order to avoid potential conflicts
[[2m2025-09-01 21:28:55.801[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mc.i.s.config.JwtAuthenticationFilter    [0;39m [2m:[0;39m Filter 'jwtAuthenticationFilter' configured for use
[[2m2025-09-01 21:28:55.869[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.hibernate.jpa.internal.util.LogHelper [0;39m [2m:[0;39m HHH000204: Processing PersistenceUnitInfo [name: default]
[[2m2025-09-01 21:28:55.900[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.Version                   [0;39m [2m:[0;39m HHH000412: Hibernate ORM core version 6.6.22.Final
[[2m2025-09-01 21:28:55.919[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.h.c.internal.RegionFactoryInitiator   [0;39m [2m:[0;39m HHH000026: Second-level cache disabled
[[2m2025-09-01 21:28:56.084[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.o.j.p.SpringPersistenceUnitInfo     [0;39m [2m:[0;39m No LoadTimeWeaver setup: ignoring JPA class transformer
[[2m2025-09-01 21:28:56.101[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mcom.zaxxer.hikari.HikariDataSource      [0;39m [2m:[0;39m HikariPool-1 - Starting...
[[2m2025-09-01 21:28:56.202[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mcom.zaxxer.hikari.pool.HikariPool       [0;39m [2m:[0;39m HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
[[2m2025-09-01 21:28:56.203[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mcom.zaxxer.hikari.HikariDataSource      [0;39m [2m:[0;39m HikariPool-1 - Start completed.
[[2m2025-09-01 21:28:56.217[0;39m] [33m WARN[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.orm.deprecation           [0;39m [2m:[0;39m HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
[[2m2025-09-01 21:28:56.229[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.orm.connections.pooling   [0;39m [2m:[0;39m HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
[[2m2025-09-01 21:28:56.982[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.h.e.t.j.p.i.JtaPlatformInitiator      [0;39m [2m:[0;39m HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
[[2m2025-09-01 21:28:56.991[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists admin cascade 
Hibernate: 
    drop table if exists admin cascade 
[[2m2025-09-01 21:28:56.993[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists exam cascade 
Hibernate: 
    drop table if exists exam cascade 
[[2m2025-09-01 21:28:56.993[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists exam_document cascade 
Hibernate: 
    drop table if exists exam_document cascade 
[[2m2025-09-01 21:28:56.994[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists exam_result cascade 
Hibernate: 
    drop table if exists exam_result cascade 
[[2m2025-09-01 21:28:56.994[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists exam_result_question cascade 
Hibernate: 
    drop table if exists exam_result_question cascade 
[[2m2025-09-01 21:28:56.994[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists exam_sheet cascade 
Hibernate: 
    drop table if exists exam_sheet cascade 
[[2m2025-09-01 21:28:56.994[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists exam_sheet_question cascade 
Hibernate: 
    drop table if exists exam_sheet_question cascade 
[[2m2025-09-01 21:28:56.995[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists exam_sheet_selected_unit cascade 
Hibernate: 
    drop table if exists exam_sheet_selected_unit cascade 
[[2m2025-09-01 21:28:56.995[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists exam_submission cascade 
Hibernate: 
    drop table if exists exam_submission cascade 
[[2m2025-09-01 21:28:56.995[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists question cascade 
Hibernate: 
    drop table if exists question cascade 
[[2m2025-09-01 21:28:56.995[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists student cascade 
Hibernate: 
    drop table if exists student cascade 
[[2m2025-09-01 21:28:56.995[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists student_answer_sheet cascade 
Hibernate: 
    drop table if exists student_answer_sheet cascade 
[[2m2025-09-01 21:28:56.996[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists unit cascade 
Hibernate: 
    drop table if exists unit cascade 
[[2m2025-09-01 21:28:56.996[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists unit_category cascade 
Hibernate: 
    drop table if exists unit_category cascade 
[[2m2025-09-01 21:28:56.996[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists unit_subcategory cascade 
Hibernate: 
    drop table if exists unit_subcategory cascade 
[[2m2025-09-01 21:28:56.996[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists users cascade 
Hibernate: 
    drop table if exists users cascade 
[[2m2025-09-01 21:28:56.999[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    create table admin (
        id BINARY(16) not null,
        name varchar(50),
        username varchar(50) not null unique,
        academy_name varchar(100),
        email varchar(100),
        password varchar(255) not null,
        primary key (id)
    )
Hibernate: 
    create table admin (
        id BINARY(16) not null,
        name varchar(50),
        username varchar(50) not null unique,
        academy_name varchar(100),
        email varchar(100),
        password varchar(255) not null,
        primary key (id)
    )
[[2m2025-09-01 21:28:57.004[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    create table exam (
        grade integer not null,
        student_count integer not null,
        created_at timestamp(6) not null,
        exam_sheet_id BINARY(16) not null,
        id BINARY(16) not null,
        exam_name varchar(100) not null,
        content TEXT,
        qr_code_url LONGTEXT,
        primary key (id)
    )
Hibernate: 
    create table exam (
        grade integer not null,
        student_count integer not null,
        created_at timestamp(6) not null,
        exam_sheet_id BINARY(16) not null,
        id BINARY(16) not null,
        exam_name varchar(100) not null,
        content TEXT,
        qr_code_url LONGTEXT,
        primary key (id)
    )
[[2m2025-09-01 21:28:57.005[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    create table exam_document (
        exam_sheet_id BINARY(16) not null,
        id BINARY(16) not null,
        document_content LONGTEXT not null,
        qr_code_url LONGTEXT,
        document_type enum ('CORRECT_ANSWER_SHEET','EXAM_SHEET','STUDENT_ANSWER_SHEET') not null,
        primary key (id)
    )
Hibernate: 
    create table exam_document (
        exam_sheet_id BINARY(16) not null,
        id BINARY(16) not null,
        document_content LONGTEXT not null,
        qr_code_url LONGTEXT,
        document_type enum ('CORRECT_ANSWER_SHEET','EXAM_SHEET','STUDENT_ANSWER_SHEET') not null,
        primary key (id)
    )
[[2m2025-09-01 21:28:57.006[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    create table exam_result (
        total_score integer,
        version integer not null,
        created_at timestamp(6) not null,
        graded_at timestamp(6) not null,
        updated_at timestamp(6) not null,
        exam_sheet_id BINARY(16) not null,
        id BINARY(16) not null,
        submission_id BINARY(16) not null,
        grading_comment TEXT,
        status enum ('COMPLETED','IN_PROGRESS','PENDING','REGRADED') not null,
        primary key (id)
    )
Hibernate: 
    create table exam_result (
        total_score integer,
        version integer not null,
        created_at timestamp(6) not null,
        graded_at timestamp(6) not null,
        updated_at timestamp(6) not null,
        exam_sheet_id BINARY(16) not null,
        id BINARY(16) not null,
        submission_id BINARY(16) not null,
        grading_comment TEXT,
        status enum ('COMPLETED','IN_PROGRESS','PENDING','REGRADED') not null,
        primary key (id)
    )
[[2m2025-09-01 21:28:57.007[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    create table exam_result_question (
        confidence_score numeric(3,2),
        is_correct boolean,
        max_score integer not null,
        score integer,
        created_at timestamp(6) not null,
        updated_at timestamp(6) not null,
        answer_id BINARY(16) not null,
        exam_result_id BINARY(16) not null,
        id BINARY(16) not null,
        question_id BINARY(16) not null,
        grading_comment TEXT,
        grading_method enum ('AI_ASSISTED','AUTO','MANUAL') not null,
        primary key (id)
    )
Hibernate: 
    create table exam_result_question (
        confidence_score numeric(3,2),
        is_correct boolean,
        max_score integer not null,
        score integer,
        created_at timestamp(6) not null,
        updated_at timestamp(6) not null,
        answer_id BINARY(16) not null,
        exam_result_id BINARY(16) not null,
        id BINARY(16) not null,
        question_id BINARY(16) not null,
        grading_comment TEXT,
        grading_method enum ('AI_ASSISTED','AUTO','MANUAL') not null,
        primary key (id)
    )
[[2m2025-09-01 21:28:57.009[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    create table exam_sheet (
        grade integer not null,
        multiple_choice_count integer not null,
        subjective_count integer not null,
        total_questions integer not null,
        created_at timestamp(6) not null,
        updated_at timestamp(6) not null,
        id BINARY(16) not null,
        exam_name varchar(100) not null,
        primary key (id)
    )
Hibernate: 
    create table exam_sheet (
        grade integer not null,
        multiple_choice_count integer not null,
        subjective_count integer not null,
        total_questions integer not null,
        created_at timestamp(6) not null,
        updated_at timestamp(6) not null,
        id BINARY(16) not null,
        exam_name varchar(100) not null,
        primary key (id)
    )
[[2m2025-09-01 21:28:57.009[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    create table exam_sheet_question (
        points integer not null,
        seq_no integer not null,
        exam_sheet_id BINARY(16) not null,
        id BINARY(16) not null,
        question_id BINARY(16) not null,
        selection_method enum ('MANUAL','RANDOM') not null,
        primary key (id)
    )
Hibernate: 
    create table exam_sheet_question (
        points integer not null,
        seq_no integer not null,
        exam_sheet_id BINARY(16) not null,
        id BINARY(16) not null,
        question_id BINARY(16) not null,
        selection_method enum ('MANUAL','RANDOM') not null,
        primary key (id)
    )
[[2m2025-09-01 21:28:57.011[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    create table exam_sheet_selected_unit (
        exam_sheet_id BINARY(16) not null,
        id BINARY(16) not null,
        unit_id BINARY(16) not null,
        primary key (id)
    )
Hibernate: 
    create table exam_sheet_selected_unit (
        exam_sheet_id BINARY(16) not null,
        id BINARY(16) not null,
        unit_id BINARY(16) not null,
        primary key (id)
    )
[[2m2025-09-01 21:28:57.012[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    create table exam_submission (
        total_score integer,
        submitted_at timestamp(6) not null,
        exam_id BINARY(16) not null,
        id BINARY(16) not null,
        student_id BINARY(16) not null,
        primary key (id)
    )
Hibernate: 
    create table exam_submission (
        total_score integer,
        submitted_at timestamp(6) not null,
        exam_id BINARY(16) not null,
        id BINARY(16) not null,
        student_id BINARY(16) not null,
        primary key (id)
    )
[[2m2025-09-01 21:28:57.014[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    create table question (
        correct_choice integer,
        points integer,
        id BINARY(16) not null,
        unit_id BINARY(16) not null,
        answer_text LONGTEXT not null,
        choices JSON,
        image JSON,
        question_text TEXT not null,
        scoring_rubric TEXT,
        difficulty enum ('상','중','하') not null,
        question_type VARCHAR(20) DEFAULT 'SUBJECTIVE' not null,
        primary key (id)
    )
Hibernate: 
    create table question (
        correct_choice integer,
        points integer,
        id BINARY(16) not null,
        unit_id BINARY(16) not null,
        answer_text LONGTEXT not null,
        choices JSON,
        image JSON,
        question_text TEXT not null,
        scoring_rubric TEXT,
        difficulty enum ('상','중','하') not null,
        question_type VARCHAR(20) DEFAULT 'SUBJECTIVE' not null,
        primary key (id)
    )
[[2m2025-09-01 21:28:57.016[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    create table student (
        birth_date date not null,
        grade integer not null,
        id BINARY(16) not null,
        phone varchar(20),
        name varchar(50) not null,
        primary key (id)
    )
Hibernate: 
    create table student (
        birth_date date not null,
        grade integer not null,
        id BINARY(16) not null,
        phone varchar(20),
        name varchar(50) not null,
        primary key (id)
    )
[[2m2025-09-01 21:28:57.017[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    create table student_answer_sheet (
        is_correct boolean,
        score integer,
        selected_choice integer,
        id BINARY(16) not null,
        question_id BINARY(16) not null,
        submission_id BINARY(16) not null,
        answer_image_url varchar(500),
        answer_text varchar(1000),
        ai_solution_process TEXT,
        primary key (id)
    )
Hibernate: 
    create table student_answer_sheet (
        is_correct boolean,
        score integer,
        selected_choice integer,
        id BINARY(16) not null,
        question_id BINARY(16) not null,
        submission_id BINARY(16) not null,
        answer_image_url varchar(500),
        answer_text varchar(1000),
        ai_solution_process TEXT,
        primary key (id)
    )
[[2m2025-09-01 21:28:57.018[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    create table unit (
        display_order integer not null,
        grade integer not null,
        id BINARY(16) not null,
        subcategory_id BINARY(16) not null,
        unit_code varchar(30) not null unique,
        unit_name varchar(100) not null,
        description TEXT,
        primary key (id)
    )
Hibernate: 
    create table unit (
        display_order integer not null,
        grade integer not null,
        id BINARY(16) not null,
        subcategory_id BINARY(16) not null,
        unit_code varchar(30) not null unique,
        unit_name varchar(100) not null,
        description TEXT,
        primary key (id)
    )
[[2m2025-09-01 21:28:57.019[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    create table unit_category (
        display_order integer not null,
        id BINARY(16) not null,
        category_name varchar(50) not null,
        description varchar(200),
        primary key (id)
    )
Hibernate: 
    create table unit_category (
        display_order integer not null,
        id BINARY(16) not null,
        category_name varchar(50) not null,
        description varchar(200),
        primary key (id)
    )
[[2m2025-09-01 21:28:57.019[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    create table unit_subcategory (
        display_order integer not null,
        category_id BINARY(16) not null,
        id BINARY(16) not null,
        subcategory_name varchar(100) not null,
        description varchar(200),
        primary key (id)
    )
Hibernate: 
    create table unit_subcategory (
        display_order integer not null,
        category_id BINARY(16) not null,
        id BINARY(16) not null,
        subcategory_name varchar(100) not null,
        description varchar(200),
        primary key (id)
    )
[[2m2025-09-01 21:28:57.020[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    create table users (
        birth_date date,
        grade integer,
        created_at timestamp(6),
        updated_at timestamp(6),
        id BINARY(16) not null,
        phone varchar(20),
        name varchar(50) not null,
        username varchar(50) unique,
        academy_name varchar(100),
        email varchar(100),
        password varchar(255),
        role enum ('ADMIN','STUDENT') not null,
        primary key (id)
    )
Hibernate: 
    create table users (
        birth_date date,
        grade integer,
        created_at timestamp(6),
        updated_at timestamp(6),
        id BINARY(16) not null,
        phone varchar(20),
        name varchar(50) not null,
        username varchar(50) unique,
        academy_name varchar(100),
        email varchar(100),
        password varchar(255),
        role enum ('ADMIN','STUDENT') not null,
        primary key (id)
    )
[[2m2025-09-01 21:28:57.022[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    alter table if exists exam 
       add constraint FKslua7xmmjqpru9m6c0krepsbv 
       foreign key (exam_sheet_id) 
       references exam_sheet
Hibernate: 
    alter table if exists exam 
       add constraint FKslua7xmmjqpru9m6c0krepsbv 
       foreign key (exam_sheet_id) 
       references exam_sheet
[[2m2025-09-01 21:28:57.030[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    alter table if exists exam_document 
       add constraint FKnx1cqh8l78dxanvxg0bef7ga6 
       foreign key (exam_sheet_id) 
       references exam_sheet
Hibernate: 
    alter table if exists exam_document 
       add constraint FKnx1cqh8l78dxanvxg0bef7ga6 
       foreign key (exam_sheet_id) 
       references exam_sheet
[[2m2025-09-01 21:28:57.031[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    alter table if exists exam_result 
       add constraint FK1kxnkym7yfaed68mx1p9nujeb 
       foreign key (exam_sheet_id) 
       references exam_sheet
Hibernate: 
    alter table if exists exam_result 
       add constraint FK1kxnkym7yfaed68mx1p9nujeb 
       foreign key (exam_sheet_id) 
       references exam_sheet
[[2m2025-09-01 21:28:57.032[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    alter table if exists exam_result 
       add constraint FK5h2e7spb12bowlcpn9ni2iccg 
       foreign key (submission_id) 
       references exam_submission
Hibernate: 
    alter table if exists exam_result 
       add constraint FK5h2e7spb12bowlcpn9ni2iccg 
       foreign key (submission_id) 
       references exam_submission
[[2m2025-09-01 21:28:57.033[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    alter table if exists exam_result_question 
       add constraint FK5aqnya5vgl4c2nwvpv0ornhdu 
       foreign key (exam_result_id) 
       references exam_result
Hibernate: 
    alter table if exists exam_result_question 
       add constraint FK5aqnya5vgl4c2nwvpv0ornhdu 
       foreign key (exam_result_id) 
       references exam_result
[[2m2025-09-01 21:28:57.035[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    alter table if exists exam_result_question 
       add constraint FKsbejvkmejga9gx8m6hdidiox5 
       foreign key (question_id) 
       references question
Hibernate: 
    alter table if exists exam_result_question 
       add constraint FKsbejvkmejga9gx8m6hdidiox5 
       foreign key (question_id) 
       references question
[[2m2025-09-01 21:28:57.036[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    alter table if exists exam_result_question 
       add constraint FKo6t3vrkoarst5p5wfnssw7ask 
       foreign key (answer_id) 
       references student_answer_sheet
Hibernate: 
    alter table if exists exam_result_question 
       add constraint FKo6t3vrkoarst5p5wfnssw7ask 
       foreign key (answer_id) 
       references student_answer_sheet
[[2m2025-09-01 21:28:57.037[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    alter table if exists exam_sheet_question 
       add constraint FKhhbpusdcfj01oogq0c4s3dfit 
       foreign key (exam_sheet_id) 
       references exam_sheet
Hibernate: 
    alter table if exists exam_sheet_question 
       add constraint FKhhbpusdcfj01oogq0c4s3dfit 
       foreign key (exam_sheet_id) 
       references exam_sheet
[[2m2025-09-01 21:28:57.038[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    alter table if exists exam_sheet_question 
       add constraint FKrd319pw6ublwiqxr5ojji75o4 
       foreign key (question_id) 
       references question
Hibernate: 
    alter table if exists exam_sheet_question 
       add constraint FKrd319pw6ublwiqxr5ojji75o4 
       foreign key (question_id) 
       references question
[[2m2025-09-01 21:28:57.039[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    alter table if exists exam_sheet_selected_unit 
       add constraint FK2xbjk8ujtgcok7pm4ddrmn0ak 
       foreign key (exam_sheet_id) 
       references exam_sheet
Hibernate: 
    alter table if exists exam_sheet_selected_unit 
       add constraint FK2xbjk8ujtgcok7pm4ddrmn0ak 
       foreign key (exam_sheet_id) 
       references exam_sheet
[[2m2025-09-01 21:28:57.040[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    alter table if exists exam_sheet_selected_unit 
       add constraint FK42oxhmr6y5rnn12m7gf4cqcwf 
       foreign key (unit_id) 
       references unit
Hibernate: 
    alter table if exists exam_sheet_selected_unit 
       add constraint FK42oxhmr6y5rnn12m7gf4cqcwf 
       foreign key (unit_id) 
       references unit
[[2m2025-09-01 21:28:57.041[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    alter table if exists exam_submission 
       add constraint FKhpbxc166py57lqe75pkrbw4b5 
       foreign key (exam_id) 
       references exam
Hibernate: 
    alter table if exists exam_submission 
       add constraint FKhpbxc166py57lqe75pkrbw4b5 
       foreign key (exam_id) 
       references exam
[[2m2025-09-01 21:28:57.042[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    alter table if exists exam_submission 
       add constraint FKl6b1w8qnpshafs2cna6uo7ej2 
       foreign key (student_id) 
       references users
Hibernate: 
    alter table if exists exam_submission 
       add constraint FKl6b1w8qnpshafs2cna6uo7ej2 
       foreign key (student_id) 
       references users
[[2m2025-09-01 21:28:57.043[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    alter table if exists question 
       add constraint FKs1tl5ukggla0y9dkixxfimpwx 
       foreign key (unit_id) 
       references unit
Hibernate: 
    alter table if exists question 
       add constraint FKs1tl5ukggla0y9dkixxfimpwx 
       foreign key (unit_id) 
       references unit
[[2m2025-09-01 21:28:57.044[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    alter table if exists student_answer_sheet 
       add constraint FK63r296id7mv5ydnla6anonx3b 
       foreign key (submission_id) 
       references exam_submission
Hibernate: 
    alter table if exists student_answer_sheet 
       add constraint FK63r296id7mv5ydnla6anonx3b 
       foreign key (submission_id) 
       references exam_submission
[[2m2025-09-01 21:28:57.045[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    alter table if exists student_answer_sheet 
       add constraint FKqow3301uxhfpcrfp3fdheyrt0 
       foreign key (question_id) 
       references question
Hibernate: 
    alter table if exists student_answer_sheet 
       add constraint FKqow3301uxhfpcrfp3fdheyrt0 
       foreign key (question_id) 
       references question
[[2m2025-09-01 21:28:57.047[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    alter table if exists unit 
       add constraint FKjkc14skpio53pwkriddt28c27 
       foreign key (subcategory_id) 
       references unit_subcategory
Hibernate: 
    alter table if exists unit 
       add constraint FKjkc14skpio53pwkriddt28c27 
       foreign key (subcategory_id) 
       references unit_subcategory
[[2m2025-09-01 21:28:57.048[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    alter table if exists unit_subcategory 
       add constraint FKjjsoskeu940jdm1ahqgg7tmhn 
       foreign key (category_id) 
       references unit_category
Hibernate: 
    alter table if exists unit_subcategory 
       add constraint FKjjsoskeu940jdm1ahqgg7tmhn 
       foreign key (category_id) 
       references unit_category
[[2m2025-09-01 21:28:57.051[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mj.LocalContainerEntityManagerFactoryBean[0;39m [2m:[0;39m Initialized JPA EntityManagerFactory for persistence unit 'default'
[[2m2025-09-01 21:28:57.232[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.d.j.r.query.QueryEnhancerFactory    [0;39m [2m:[0;39m Hibernate is in classpath; If applicable, HQL parser will be used.
[[2m2025-09-01 21:28:57.813[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mc.i.springbackend.config.AiServerConfig [0;39m [2m:[0;39m AI 서버 WebClient 설정 시작: baseUrl=http://localhost:8000, connectTimeout=30초, responseTimeout=60초
[[2m2025-09-01 21:28:57.922[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mc.i.springbackend.config.AiServerConfig [0;39m [2m:[0;39m AI 서버 WebClient 설정 완료
[[2m2025-09-01 21:28:58.553[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mc.i.springbackend.config.S3Config       [0;39m [2m:[0;39m S3 클라이언트 생성 시작: region=ap-northeast-2, bucketName=
[[2m2025-09-01 21:28:58.883[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mc.i.springbackend.config.S3Config       [0;39m [2m:[0;39m S3 클라이언트 생성 완료
[[2m2025-09-01 21:28:58.935[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mc.i.springbackend.config.S3Config       [0;39m [2m:[0;39m S3 프리사인드 URL 생성기 생성 시작: region=ap-northeast-2, urlDuration=60분
[[2m2025-09-01 21:28:58.944[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mc.i.springbackend.config.S3Config       [0;39m [2m:[0;39m S3 프리사인드 URL 생성기 생성 완료
[[2m2025-09-01 21:28:59.034[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mc.i.springbackend.config.S3Config       [0;39m [2m:[0;39m S3 비동기 클라이언트 생성 시작: region=ap-northeast-2
[[2m2025-09-01 21:28:59.088[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mc.i.springbackend.config.S3Config       [0;39m [2m:[0;39m S3 비동기 클라이언트 생성 완료
[[2m2025-09-01 21:28:59.100[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mc.i.springbackend.config.S3Config       [0;39m [2m:[0;39m S3 Transfer Manager 생성 시작: minPartSize=8MB
[[2m2025-09-01 21:28:59.106[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mc.i.springbackend.config.S3Config       [0;39m [2m:[0;39m S3 Transfer Manager 생성 완료
[[2m2025-09-01 21:28:59.308[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mr$InitializeUserDetailsManagerConfigurer[0;39m [2m:[0;39m Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService
[[2m2025-09-01 21:28:59.376[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.s.web.DefaultSecurityFilterChain    [0;39m [2m:[0;39m Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
[[2m2025-09-01 21:28:59.689[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.b.a.h2.H2ConsoleAutoConfiguration   [0;39m [2m:[0;39m H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
[[2m2025-09-01 21:28:59.742[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.b.d.a.OptionalLiveReloadServer      [0;39m [2m:[0;39m LiveReload server is running on port 35729
[[2m2025-09-01 21:28:59.762[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.coyote.http11.Http11NioProtocol     [0;39m [2m:[0;39m Starting ProtocolHandler ["http-nio-3055"]
[[2m2025-09-01 21:28:59.771[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.b.w.embedded.tomcat.TomcatWebServer [0;39m [2m:[0;39m Tomcat started on port 3055 (http) with context path '/api'
[[2m2025-09-01 21:28:59.777[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mc.i.s.SpringBackendApplication          [0;39m [2m:[0;39m Started SpringBackendApplication in 5.671 seconds (process running for 5.944)
[[2m2025-09-01 21:28:59.823[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    /* <criteria> */ select
        u1_0.id,
        u1_0.academy_name,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.grade,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    /* <criteria> */ select
        u1_0.id,
        u1_0.academy_name,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.grade,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
[[2m2025-09-01 21:28:59.922[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mc.i.s.config.TestDataInitializer        [0;39m [2m:[0;39m 테스트 관리자 계정 생성 완료: username=admin, id=01990540-8a8b-769d-9220-7d16a390225b
[[2m2025-09-01 21:28:59.922[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mc.i.s.config.TestDataInitializer        [0;39m [2m:[0;39m 테스트 로그인 정보 - 사용자명: admin, 비밀번호: password
[[2m2025-09-01 21:28:59.930[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    /* insert for
        com.iroomclass.springbackend.domain.user.entity.User */insert 
    into
        users (academy_name, birth_date, created_at, email, grade, name, password, phone, role, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    /* insert for
        com.iroomclass.springbackend.domain.user.entity.User */insert 
    into
        users (academy_name, birth_date, created_at, email, grade, name, password, phone, role, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[[2m2025-09-01 21:29:04.659[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[nio-3055-exec-1][0;39m [36mo.a.c.c.C.[Tomcat].[localhost].[/api]   [0;39m [2m:[0;39m Initializing Spring DispatcherServlet 'dispatcherServlet'
[[2m2025-09-01 21:29:04.659[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[nio-3055-exec-1][0;39m [36mo.s.web.servlet.DispatcherServlet       [0;39m [2m:[0;39m Initializing Servlet 'dispatcherServlet'
[[2m2025-09-01 21:29:04.660[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[nio-3055-exec-1][0;39m [36mo.s.web.servlet.DispatcherServlet       [0;39m [2m:[0;39m Completed initialization in 1 ms
[[2m2025-09-01 21:29:04.670[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[nio-3055-exec-1][0;39m [36mo.s.security.web.FilterChainProxy       [0;39m [2m:[0;39m Securing POST /auth/login
[[2m2025-09-01 21:29:04.674[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[nio-3055-exec-1][0;39m [36mo.s.s.w.a.AnonymousAuthenticationFilter [0;39m [2m:[0;39m Set SecurityContextHolder to anonymous SecurityContext
[[2m2025-09-01 21:29:04.677[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[nio-3055-exec-1][0;39m [36mo.s.security.web.FilterChainProxy       [0;39m [2m:[0;39m Secured POST /auth/login
[[2m2025-09-01 21:29:04.726[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[nio-3055-exec-1][0;39m [36mc.i.s.d.user.controller.AuthController  [0;39m [2m:[0;39m 관리자 로그인 API 호출: admin
[[2m2025-09-01 21:29:04.727[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[nio-3055-exec-1][0;39m [36mc.i.s.domain.user.service.AuthService   [0;39m [2m:[0;39m 관리자 로그인 시도: admin
[[2m2025-09-01 21:29:04.729[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[nio-3055-exec-1][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    /* <criteria> */ select
        u1_0.id,
        u1_0.academy_name,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.grade,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    /* <criteria> */ select
        u1_0.id,
        u1_0.academy_name,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.grade,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
[[2m2025-09-01 21:29:04.844[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[nio-3055-exec-1][0;39m [36mc.i.s.domain.user.service.AuthService   [0;39m [2m:[0;39m 관리자 로그인 성공: admin (역할: ADMIN)
[[2m2025-09-01 21:29:04.845[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[nio-3055-exec-1][0;39m [36mc.i.s.d.user.controller.AuthController  [0;39m [2m:[0;39m 관리자 로그인 API 성공: admin (역할: ADMIN)
[[2m2025-09-01 21:29:36.819[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[nio-3055-exec-2][0;39m [36mo.s.security.web.FilterChainProxy       [0;39m [2m:[0;39m Securing GET /auth/me
[[2m2025-09-01 21:29:36.845[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[nio-3055-exec-2][0;39m [36mc.i.s.config.JwtAuthenticationFilter    [0;39m [2m:[0;39m 사용자 [admin] JWT 인증 성공, 역할: ADMIN
[[2m2025-09-01 21:29:36.845[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[nio-3055-exec-2][0;39m [36mo.s.security.web.FilterChainProxy       [0;39m [2m:[0;39m Secured GET /auth/me
[[2m2025-09-01 21:41:04.242[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[   File Watcher][0;39m [36mrtingClassPathChangeChangedEventListener[0;39m [2m:[0;39m Restarting due to 13 class path changes (0 additions, 0 deletions, 13 modifications)
[[2m2025-09-01 21:41:04.245[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[       Thread-7][0;39m [36mo.s.b.w.e.tomcat.GracefulShutdown       [0;39m [2m:[0;39m Commencing graceful shutdown. Waiting for active requests to complete
[[2m2025-09-01 21:41:04.247[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[tomcat-shutdown][0;39m [36mo.a.coyote.http11.Http11NioProtocol     [0;39m [2m:[0;39m Pausing ProtocolHandler ["http-nio-3055"]
[[2m2025-09-01 21:41:04.251[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[tomcat-shutdown][0;39m [36mo.s.b.w.e.tomcat.GracefulShutdown       [0;39m [2m:[0;39m Graceful shutdown complete
[[2m2025-09-01 21:41:04.251[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[       Thread-7][0;39m [36mo.a.coyote.http11.Http11NioProtocol     [0;39m [2m:[0;39m Stopping ProtocolHandler ["http-nio-3055"]
[[2m2025-09-01 21:41:06.362[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[       Thread-7][0;39m [36mj.LocalContainerEntityManagerFactoryBean[0;39m [2m:[0;39m Closing JPA EntityManagerFactory for persistence unit 'default'
[[2m2025-09-01 21:41:06.363[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[       Thread-7][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists admin cascade 
Hibernate: 
    drop table if exists admin cascade 
[[2m2025-09-01 21:41:06.365[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[       Thread-7][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists exam cascade 
Hibernate: 
    drop table if exists exam cascade 
[[2m2025-09-01 21:41:06.365[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[       Thread-7][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists exam_document cascade 
Hibernate: 
    drop table if exists exam_document cascade 
[[2m2025-09-01 21:41:06.366[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[       Thread-7][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists exam_result cascade 
Hibernate: 
    drop table if exists exam_result cascade 
[[2m2025-09-01 21:41:06.366[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[       Thread-7][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists exam_result_question cascade 
Hibernate: 
    drop table if exists exam_result_question cascade 
[[2m2025-09-01 21:41:06.367[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[       Thread-7][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists exam_sheet cascade 
Hibernate: 
    drop table if exists exam_sheet cascade 
[[2m2025-09-01 21:41:06.368[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[       Thread-7][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists exam_sheet_question cascade 
Hibernate: 
    drop table if exists exam_sheet_question cascade 
[[2m2025-09-01 21:41:06.368[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[       Thread-7][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists exam_sheet_selected_unit cascade 
Hibernate: 
    drop table if exists exam_sheet_selected_unit cascade 
[[2m2025-09-01 21:41:06.368[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[       Thread-7][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists exam_submission cascade 
Hibernate: 
    drop table if exists exam_submission cascade 
[[2m2025-09-01 21:41:06.369[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[       Thread-7][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists question cascade 
Hibernate: 
    drop table if exists question cascade 
[[2m2025-09-01 21:41:06.370[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[       Thread-7][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists student cascade 
Hibernate: 
    drop table if exists student cascade 
[[2m2025-09-01 21:41:06.370[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[       Thread-7][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists student_answer_sheet cascade 
Hibernate: 
    drop table if exists student_answer_sheet cascade 
[[2m2025-09-01 21:41:06.371[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[       Thread-7][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists unit cascade 
Hibernate: 
    drop table if exists unit cascade 
[[2m2025-09-01 21:41:06.371[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[       Thread-7][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists unit_category cascade 
Hibernate: 
    drop table if exists unit_category cascade 
[[2m2025-09-01 21:41:06.372[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[       Thread-7][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists unit_subcategory cascade 
Hibernate: 
    drop table if exists unit_subcategory cascade 
[[2m2025-09-01 21:41:06.373[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[       Thread-7][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists users cascade 
Hibernate: 
    drop table if exists users cascade 
[[2m2025-09-01 21:41:06.378[0;39m] [33m WARN[0;39m [35m3096282[0;39m [2m---[0;39m [2m[       Thread-7][0;39m [36mo.s.b.f.support.DisposableBeanAdapter   [0;39m [2m:[0;39m Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-232]
[[2m2025-09-01 21:41:06.382[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[       Thread-7][0;39m [36mcom.zaxxer.hikari.HikariDataSource      [0;39m [2m:[0;39m HikariPool-1 - Shutdown initiated...
[[2m2025-09-01 21:41:06.385[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[       Thread-7][0;39m [36mcom.zaxxer.hikari.HikariDataSource      [0;39m [2m:[0;39m HikariPool-1 - Shutdown completed.
Standard Commons Logging discovery in action with spring-jcl: please remove commons-logging.jar from classpath in order to avoid potential conflicts
21:41:06,521 |-WARN in ch.qos.logback.core.joran.action.ConversionRuleAction - [converterClass] attribute is deprecated and replaced by [class]. See element [conversionRule] near line 11
21:41:06,521 |-WARN in ch.qos.logback.core.joran.action.ConversionRuleAction - [converterClass] attribute is deprecated and replaced by [class]. See element [conversionRule] near line 13
21:41:06,521 |-WARN in ch.qos.logback.core.joran.action.ConversionRuleAction - [converterClass] attribute is deprecated and replaced by [class]. See element [conversionRule] near line 15

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/

[32m :: Spring Boot :: [39m              [2m (v3.5.4)[0;39m

[[2m2025-09-01 21:41:06.552[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mc.i.s.SpringBackendApplication          [0;39m [2m:[0;39m Starting SpringBackendApplication using Java 21.0.8 with PID 3096282 (/home/aiden/programming/final-project/iroom-backend-springboot/build/classes/java/main started by aiden in /home/aiden/programming/final-project/iroom-backend-springboot)
[[2m2025-09-01 21:41:06.552[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mc.i.s.SpringBackendApplication          [0;39m [2m:[0;39m Running with Spring Boot v3.5.4, Spring v6.2.9
[[2m2025-09-01 21:41:06.552[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mc.i.s.SpringBackendApplication          [0;39m [2m:[0;39m The following 1 profile is active: "test-local"
[[2m2025-09-01 21:41:06.938[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.s.d.r.c.RepositoryConfigurationDelegate[0;39m [2m:[0;39m Multiple Spring Data modules found, entering strict repository configuration mode
[[2m2025-09-01 21:41:06.938[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.s.d.r.c.RepositoryConfigurationDelegate[0;39m [2m:[0;39m Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[[2m2025-09-01 21:41:06.963[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.s.d.r.c.RepositoryConfigurationDelegate[0;39m [2m:[0;39m Finished Spring Data repository scanning in 25 ms. Found 16 JPA repository interfaces.
[[2m2025-09-01 21:41:06.966[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.s.d.r.c.RepositoryConfigurationDelegate[0;39m [2m:[0;39m Multiple Spring Data modules found, entering strict repository configuration mode
[[2m2025-09-01 21:41:06.966[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.s.d.r.c.RepositoryConfigurationDelegate[0;39m [2m:[0;39m Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[[2m2025-09-01 21:41:06.971[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.RepositoryConfigurationExtensionSupport[0;39m [2m:[0;39m Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.iroomclass.springbackend.domain.curriculum.repository.UnitCategoryRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[[2m2025-09-01 21:41:06.971[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.RepositoryConfigurationExtensionSupport[0;39m [2m:[0;39m Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.iroomclass.springbackend.domain.curriculum.repository.UnitRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[[2m2025-09-01 21:41:06.972[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.RepositoryConfigurationExtensionSupport[0;39m [2m:[0;39m Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.iroomclass.springbackend.domain.curriculum.repository.UnitSubcategoryRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[[2m2025-09-01 21:41:06.972[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.RepositoryConfigurationExtensionSupport[0;39m [2m:[0;39m Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.iroomclass.springbackend.domain.exam.repository.ExamDocumentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[[2m2025-09-01 21:41:06.972[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.RepositoryConfigurationExtensionSupport[0;39m [2m:[0;39m Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.iroomclass.springbackend.domain.exam.repository.ExamRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[[2m2025-09-01 21:41:06.972[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.RepositoryConfigurationExtensionSupport[0;39m [2m:[0;39m Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.iroomclass.springbackend.domain.exam.repository.ExamResultRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[[2m2025-09-01 21:41:06.972[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.RepositoryConfigurationExtensionSupport[0;39m [2m:[0;39m Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.iroomclass.springbackend.domain.exam.repository.ExamSheetQuestionRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[[2m2025-09-01 21:41:06.972[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.RepositoryConfigurationExtensionSupport[0;39m [2m:[0;39m Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.iroomclass.springbackend.domain.exam.repository.ExamSheetRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[[2m2025-09-01 21:41:06.972[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.RepositoryConfigurationExtensionSupport[0;39m [2m:[0;39m Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.iroomclass.springbackend.domain.exam.repository.ExamSheetSelectedUnitRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[[2m2025-09-01 21:41:06.972[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.RepositoryConfigurationExtensionSupport[0;39m [2m:[0;39m Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.iroomclass.springbackend.domain.exam.repository.ExamSubmissionRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[[2m2025-09-01 21:41:06.972[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.RepositoryConfigurationExtensionSupport[0;39m [2m:[0;39m Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.iroomclass.springbackend.domain.exam.repository.QuestionRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[[2m2025-09-01 21:41:06.972[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.RepositoryConfigurationExtensionSupport[0;39m [2m:[0;39m Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.iroomclass.springbackend.domain.exam.repository.QuestionResultRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[[2m2025-09-01 21:41:06.972[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.RepositoryConfigurationExtensionSupport[0;39m [2m:[0;39m Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.iroomclass.springbackend.domain.exam.repository.StudentAnswerSheetRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[[2m2025-09-01 21:41:06.973[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.RepositoryConfigurationExtensionSupport[0;39m [2m:[0;39m Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.iroomclass.springbackend.domain.user.repository.StudentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[[2m2025-09-01 21:41:06.973[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.RepositoryConfigurationExtensionSupport[0;39m [2m:[0;39m Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.iroomclass.springbackend.domain.user.repository.TeacherRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[[2m2025-09-01 21:41:06.973[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.RepositoryConfigurationExtensionSupport[0;39m [2m:[0;39m Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.iroomclass.springbackend.domain.user.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[[2m2025-09-01 21:41:06.973[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.s.d.r.c.RepositoryConfigurationDelegate[0;39m [2m:[0;39m Finished Spring Data repository scanning in 5 ms. Found 0 Redis repository interfaces.
[[2m2025-09-01 21:41:07.078[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.b.w.embedded.tomcat.TomcatWebServer [0;39m [2m:[0;39m Tomcat initialized with port 3055 (http)
[[2m2025-09-01 21:41:07.080[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.coyote.http11.Http11NioProtocol     [0;39m [2m:[0;39m Initializing ProtocolHandler ["http-nio-3055"]
[[2m2025-09-01 21:41:07.080[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.apache.catalina.core.StandardService  [0;39m [2m:[0;39m Starting service [Tomcat]
[[2m2025-09-01 21:41:07.080[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.apache.catalina.core.StandardEngine   [0;39m [2m:[0;39m Starting Servlet engine: [Apache Tomcat/10.1.43]
[[2m2025-09-01 21:41:07.088[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.c.c.C.[Tomcat].[localhost].[/api]   [0;39m [2m:[0;39m Initializing Spring embedded WebApplicationContext
[[2m2025-09-01 21:41:07.089[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mw.s.c.ServletWebServerApplicationContext[0;39m [2m:[0;39m Root WebApplicationContext: initialization completed in 531 ms
Standard Commons Logging discovery in action with spring-jcl: please remove commons-logging.jar from classpath in order to avoid potential conflicts
[[2m2025-09-01 21:41:07.099[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mc.i.s.config.JwtAuthenticationFilter    [0;39m [2m:[0;39m Filter 'jwtAuthenticationFilter' configured for use
[[2m2025-09-01 21:41:07.125[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.hibernate.jpa.internal.util.LogHelper [0;39m [2m:[0;39m HHH000204: Processing PersistenceUnitInfo [name: default]
[[2m2025-09-01 21:41:07.127[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.h.c.internal.RegionFactoryInitiator   [0;39m [2m:[0;39m HHH000026: Second-level cache disabled
[[2m2025-09-01 21:41:07.139[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.o.j.p.SpringPersistenceUnitInfo     [0;39m [2m:[0;39m No LoadTimeWeaver setup: ignoring JPA class transformer
[[2m2025-09-01 21:41:07.140[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mcom.zaxxer.hikari.HikariDataSource      [0;39m [2m:[0;39m HikariPool-2 - Starting...
[[2m2025-09-01 21:41:07.144[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mcom.zaxxer.hikari.pool.HikariPool       [0;39m [2m:[0;39m HikariPool-2 - Added connection conn10: url=jdbc:h2:mem:testdb user=SA
[[2m2025-09-01 21:41:07.144[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mcom.zaxxer.hikari.HikariDataSource      [0;39m [2m:[0;39m HikariPool-2 - Start completed.
[[2m2025-09-01 21:41:07.144[0;39m] [33m WARN[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.orm.deprecation           [0;39m [2m:[0;39m HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
[[2m2025-09-01 21:41:07.145[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.orm.connections.pooling   [0;39m [2m:[0;39m HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-2)']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
[[2m2025-09-01 21:41:07.411[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.h.e.t.j.p.i.JtaPlatformInitiator      [0;39m [2m:[0;39m HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
[[2m2025-09-01 21:41:07.411[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists admin cascade 
Hibernate: 
    drop table if exists admin cascade 
[[2m2025-09-01 21:41:07.412[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists exam cascade 
Hibernate: 
    drop table if exists exam cascade 
[[2m2025-09-01 21:41:07.412[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists exam_document cascade 
Hibernate: 
    drop table if exists exam_document cascade 
[[2m2025-09-01 21:41:07.413[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists exam_result cascade 
Hibernate: 
    drop table if exists exam_result cascade 
[[2m2025-09-01 21:41:07.413[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists exam_result_question cascade 
Hibernate: 
    drop table if exists exam_result_question cascade 
[[2m2025-09-01 21:41:07.413[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists exam_sheet cascade 
Hibernate: 
    drop table if exists exam_sheet cascade 
[[2m2025-09-01 21:41:07.413[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists exam_sheet_question cascade 
Hibernate: 
    drop table if exists exam_sheet_question cascade 
[[2m2025-09-01 21:41:07.413[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists exam_sheet_selected_unit cascade 
Hibernate: 
    drop table if exists exam_sheet_selected_unit cascade 
[[2m2025-09-01 21:41:07.414[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists exam_submission cascade 
Hibernate: 
    drop table if exists exam_submission cascade 
[[2m2025-09-01 21:41:07.414[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists question cascade 
Hibernate: 
    drop table if exists question cascade 
[[2m2025-09-01 21:41:07.414[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists student cascade 
Hibernate: 
    drop table if exists student cascade 
[[2m2025-09-01 21:41:07.415[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists student_answer_sheet cascade 
Hibernate: 
    drop table if exists student_answer_sheet cascade 
[[2m2025-09-01 21:41:07.415[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists unit cascade 
Hibernate: 
    drop table if exists unit cascade 
[[2m2025-09-01 21:41:07.415[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists unit_category cascade 
Hibernate: 
    drop table if exists unit_category cascade 
[[2m2025-09-01 21:41:07.415[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists unit_subcategory cascade 
Hibernate: 
    drop table if exists unit_subcategory cascade 
[[2m2025-09-01 21:41:07.415[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists users cascade 
Hibernate: 
    drop table if exists users cascade 
[[2m2025-09-01 21:41:07.416[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    create table admin (
        id BINARY(16) not null,
        name varchar(50),
        username varchar(50) not null unique,
        academy_name varchar(100),
        email varchar(100),
        password varchar(255) not null,
        primary key (id)
    )
Hibernate: 
    create table admin (
        id BINARY(16) not null,
        name varchar(50),
        username varchar(50) not null unique,
        academy_name varchar(100),
        email varchar(100),
        password varchar(255) not null,
        primary key (id)
    )
[[2m2025-09-01 21:41:07.417[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    create table exam (
        grade integer not null,
        student_count integer not null,
        created_at timestamp(6) not null,
        exam_sheet_id BINARY(16) not null,
        id BINARY(16) not null,
        exam_name varchar(100) not null,
        content TEXT,
        qr_code_url LONGTEXT,
        primary key (id)
    )
Hibernate: 
    create table exam (
        grade integer not null,
        student_count integer not null,
        created_at timestamp(6) not null,
        exam_sheet_id BINARY(16) not null,
        id BINARY(16) not null,
        exam_name varchar(100) not null,
        content TEXT,
        qr_code_url LONGTEXT,
        primary key (id)
    )
[[2m2025-09-01 21:41:07.418[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    create table exam_document (
        exam_sheet_id BINARY(16) not null,
        id BINARY(16) not null,
        document_content LONGTEXT not null,
        qr_code_url LONGTEXT,
        document_type enum ('CORRECT_ANSWER_SHEET','EXAM_SHEET','STUDENT_ANSWER_SHEET') not null,
        primary key (id)
    )
Hibernate: 
    create table exam_document (
        exam_sheet_id BINARY(16) not null,
        id BINARY(16) not null,
        document_content LONGTEXT not null,
        qr_code_url LONGTEXT,
        document_type enum ('CORRECT_ANSWER_SHEET','EXAM_SHEET','STUDENT_ANSWER_SHEET') not null,
        primary key (id)
    )
[[2m2025-09-01 21:41:07.419[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    create table exam_result (
        total_score integer,
        version integer not null,
        created_at timestamp(6) not null,
        graded_at timestamp(6) not null,
        updated_at timestamp(6) not null,
        exam_sheet_id BINARY(16) not null,
        id BINARY(16) not null,
        submission_id BINARY(16) not null,
        grading_comment TEXT,
        status enum ('COMPLETED','IN_PROGRESS','PENDING','REGRADED') not null,
        primary key (id)
    )
Hibernate: 
    create table exam_result (
        total_score integer,
        version integer not null,
        created_at timestamp(6) not null,
        graded_at timestamp(6) not null,
        updated_at timestamp(6) not null,
        exam_sheet_id BINARY(16) not null,
        id BINARY(16) not null,
        submission_id BINARY(16) not null,
        grading_comment TEXT,
        status enum ('COMPLETED','IN_PROGRESS','PENDING','REGRADED') not null,
        primary key (id)
    )
[[2m2025-09-01 21:41:07.420[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    create table exam_result_question (
        confidence_score numeric(3,2),
        is_correct boolean,
        max_score integer not null,
        score integer,
        created_at timestamp(6) not null,
        updated_at timestamp(6) not null,
        answer_id BINARY(16) not null,
        exam_result_id BINARY(16) not null,
        id BINARY(16) not null,
        question_id BINARY(16) not null,
        grading_comment TEXT,
        grading_method enum ('AI_ASSISTED','AUTO','MANUAL') not null,
        primary key (id)
    )
Hibernate: 
    create table exam_result_question (
        confidence_score numeric(3,2),
        is_correct boolean,
        max_score integer not null,
        score integer,
        created_at timestamp(6) not null,
        updated_at timestamp(6) not null,
        answer_id BINARY(16) not null,
        exam_result_id BINARY(16) not null,
        id BINARY(16) not null,
        question_id BINARY(16) not null,
        grading_comment TEXT,
        grading_method enum ('AI_ASSISTED','AUTO','MANUAL') not null,
        primary key (id)
    )
[[2m2025-09-01 21:41:07.421[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    create table exam_sheet (
        grade integer not null,
        multiple_choice_count integer not null,
        subjective_count integer not null,
        total_questions integer not null,
        created_at timestamp(6) not null,
        updated_at timestamp(6) not null,
        id BINARY(16) not null,
        exam_name varchar(100) not null,
        primary key (id)
    )
Hibernate: 
    create table exam_sheet (
        grade integer not null,
        multiple_choice_count integer not null,
        subjective_count integer not null,
        total_questions integer not null,
        created_at timestamp(6) not null,
        updated_at timestamp(6) not null,
        id BINARY(16) not null,
        exam_name varchar(100) not null,
        primary key (id)
    )
[[2m2025-09-01 21:41:07.421[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    create table exam_sheet_question (
        points integer not null,
        seq_no integer not null,
        exam_sheet_id BINARY(16) not null,
        id BINARY(16) not null,
        question_id BINARY(16) not null,
        selection_method enum ('MANUAL','RANDOM') not null,
        primary key (id)
    )
Hibernate: 
    create table exam_sheet_question (
        points integer not null,
        seq_no integer not null,
        exam_sheet_id BINARY(16) not null,
        id BINARY(16) not null,
        question_id BINARY(16) not null,
        selection_method enum ('MANUAL','RANDOM') not null,
        primary key (id)
    )
[[2m2025-09-01 21:41:07.422[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    create table exam_sheet_selected_unit (
        exam_sheet_id BINARY(16) not null,
        id BINARY(16) not null,
        unit_id BINARY(16) not null,
        primary key (id)
    )
Hibernate: 
    create table exam_sheet_selected_unit (
        exam_sheet_id BINARY(16) not null,
        id BINARY(16) not null,
        unit_id BINARY(16) not null,
        primary key (id)
    )
[[2m2025-09-01 21:41:07.422[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    create table exam_submission (
        total_score integer,
        submitted_at timestamp(6) not null,
        exam_id BINARY(16) not null,
        id BINARY(16) not null,
        student_id BINARY(16) not null,
        primary key (id)
    )
Hibernate: 
    create table exam_submission (
        total_score integer,
        submitted_at timestamp(6) not null,
        exam_id BINARY(16) not null,
        id BINARY(16) not null,
        student_id BINARY(16) not null,
        primary key (id)
    )
[[2m2025-09-01 21:41:07.423[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    create table question (
        correct_choice integer,
        points integer,
        id BINARY(16) not null,
        unit_id BINARY(16) not null,
        answer_text LONGTEXT not null,
        choices JSON,
        image JSON,
        question_text TEXT not null,
        scoring_rubric TEXT,
        difficulty enum ('상','중','하') not null,
        question_type VARCHAR(20) DEFAULT 'SUBJECTIVE' not null,
        primary key (id)
    )
Hibernate: 
    create table question (
        correct_choice integer,
        points integer,
        id BINARY(16) not null,
        unit_id BINARY(16) not null,
        answer_text LONGTEXT not null,
        choices JSON,
        image JSON,
        question_text TEXT not null,
        scoring_rubric TEXT,
        difficulty enum ('상','중','하') not null,
        question_type VARCHAR(20) DEFAULT 'SUBJECTIVE' not null,
        primary key (id)
    )
[[2m2025-09-01 21:41:07.425[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    create table student (
        birth_date date not null,
        grade integer not null,
        id BINARY(16) not null,
        phone varchar(20),
        name varchar(50) not null,
        primary key (id)
    )
Hibernate: 
    create table student (
        birth_date date not null,
        grade integer not null,
        id BINARY(16) not null,
        phone varchar(20),
        name varchar(50) not null,
        primary key (id)
    )
[[2m2025-09-01 21:41:07.426[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    create table student_answer_sheet (
        is_correct boolean,
        score integer,
        selected_choice integer,
        id BINARY(16) not null,
        question_id BINARY(16) not null,
        submission_id BINARY(16) not null,
        answer_image_url varchar(500),
        answer_text varchar(1000),
        ai_solution_process TEXT,
        primary key (id)
    )
Hibernate: 
    create table student_answer_sheet (
        is_correct boolean,
        score integer,
        selected_choice integer,
        id BINARY(16) not null,
        question_id BINARY(16) not null,
        submission_id BINARY(16) not null,
        answer_image_url varchar(500),
        answer_text varchar(1000),
        ai_solution_process TEXT,
        primary key (id)
    )
[[2m2025-09-01 21:41:07.427[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    create table unit (
        display_order integer not null,
        grade integer not null,
        id BINARY(16) not null,
        subcategory_id BINARY(16) not null,
        unit_code varchar(30) not null unique,
        unit_name varchar(100) not null,
        description TEXT,
        primary key (id)
    )
Hibernate: 
    create table unit (
        display_order integer not null,
        grade integer not null,
        id BINARY(16) not null,
        subcategory_id BINARY(16) not null,
        unit_code varchar(30) not null unique,
        unit_name varchar(100) not null,
        description TEXT,
        primary key (id)
    )
[[2m2025-09-01 21:41:07.428[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    create table unit_category (
        display_order integer not null,
        id BINARY(16) not null,
        category_name varchar(50) not null,
        description varchar(200),
        primary key (id)
    )
Hibernate: 
    create table unit_category (
        display_order integer not null,
        id BINARY(16) not null,
        category_name varchar(50) not null,
        description varchar(200),
        primary key (id)
    )
[[2m2025-09-01 21:41:07.428[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    create table unit_subcategory (
        display_order integer not null,
        category_id BINARY(16) not null,
        id BINARY(16) not null,
        subcategory_name varchar(100) not null,
        description varchar(200),
        primary key (id)
    )
Hibernate: 
    create table unit_subcategory (
        display_order integer not null,
        category_id BINARY(16) not null,
        id BINARY(16) not null,
        subcategory_name varchar(100) not null,
        description varchar(200),
        primary key (id)
    )
[[2m2025-09-01 21:41:07.429[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    create table users (
        birth_date date,
        grade integer,
        created_at timestamp(6),
        updated_at timestamp(6),
        id BINARY(16) not null,
        phone varchar(20),
        name varchar(50) not null,
        username varchar(50) unique,
        academy_name varchar(100),
        email varchar(100),
        password varchar(255),
        role enum ('ADMIN','STUDENT') not null,
        primary key (id)
    )
Hibernate: 
    create table users (
        birth_date date,
        grade integer,
        created_at timestamp(6),
        updated_at timestamp(6),
        id BINARY(16) not null,
        phone varchar(20),
        name varchar(50) not null,
        username varchar(50) unique,
        academy_name varchar(100),
        email varchar(100),
        password varchar(255),
        role enum ('ADMIN','STUDENT') not null,
        primary key (id)
    )
[[2m2025-09-01 21:41:07.430[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    alter table if exists exam 
       add constraint FKslua7xmmjqpru9m6c0krepsbv 
       foreign key (exam_sheet_id) 
       references exam_sheet
Hibernate: 
    alter table if exists exam 
       add constraint FKslua7xmmjqpru9m6c0krepsbv 
       foreign key (exam_sheet_id) 
       references exam_sheet
[[2m2025-09-01 21:41:07.431[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    alter table if exists exam_document 
       add constraint FKnx1cqh8l78dxanvxg0bef7ga6 
       foreign key (exam_sheet_id) 
       references exam_sheet
Hibernate: 
    alter table if exists exam_document 
       add constraint FKnx1cqh8l78dxanvxg0bef7ga6 
       foreign key (exam_sheet_id) 
       references exam_sheet
[[2m2025-09-01 21:41:07.432[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    alter table if exists exam_result 
       add constraint FK1kxnkym7yfaed68mx1p9nujeb 
       foreign key (exam_sheet_id) 
       references exam_sheet
Hibernate: 
    alter table if exists exam_result 
       add constraint FK1kxnkym7yfaed68mx1p9nujeb 
       foreign key (exam_sheet_id) 
       references exam_sheet
[[2m2025-09-01 21:41:07.433[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    alter table if exists exam_result 
       add constraint FK5h2e7spb12bowlcpn9ni2iccg 
       foreign key (submission_id) 
       references exam_submission
Hibernate: 
    alter table if exists exam_result 
       add constraint FK5h2e7spb12bowlcpn9ni2iccg 
       foreign key (submission_id) 
       references exam_submission
[[2m2025-09-01 21:41:07.433[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    alter table if exists exam_result_question 
       add constraint FK5aqnya5vgl4c2nwvpv0ornhdu 
       foreign key (exam_result_id) 
       references exam_result
Hibernate: 
    alter table if exists exam_result_question 
       add constraint FK5aqnya5vgl4c2nwvpv0ornhdu 
       foreign key (exam_result_id) 
       references exam_result
[[2m2025-09-01 21:41:07.434[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    alter table if exists exam_result_question 
       add constraint FKsbejvkmejga9gx8m6hdidiox5 
       foreign key (question_id) 
       references question
Hibernate: 
    alter table if exists exam_result_question 
       add constraint FKsbejvkmejga9gx8m6hdidiox5 
       foreign key (question_id) 
       references question
[[2m2025-09-01 21:41:07.435[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    alter table if exists exam_result_question 
       add constraint FKo6t3vrkoarst5p5wfnssw7ask 
       foreign key (answer_id) 
       references student_answer_sheet
Hibernate: 
    alter table if exists exam_result_question 
       add constraint FKo6t3vrkoarst5p5wfnssw7ask 
       foreign key (answer_id) 
       references student_answer_sheet
[[2m2025-09-01 21:41:07.436[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    alter table if exists exam_sheet_question 
       add constraint FKhhbpusdcfj01oogq0c4s3dfit 
       foreign key (exam_sheet_id) 
       references exam_sheet
Hibernate: 
    alter table if exists exam_sheet_question 
       add constraint FKhhbpusdcfj01oogq0c4s3dfit 
       foreign key (exam_sheet_id) 
       references exam_sheet
[[2m2025-09-01 21:41:07.439[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    alter table if exists exam_sheet_question 
       add constraint FKrd319pw6ublwiqxr5ojji75o4 
       foreign key (question_id) 
       references question
Hibernate: 
    alter table if exists exam_sheet_question 
       add constraint FKrd319pw6ublwiqxr5ojji75o4 
       foreign key (question_id) 
       references question
[[2m2025-09-01 21:41:07.441[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    alter table if exists exam_sheet_selected_unit 
       add constraint FK2xbjk8ujtgcok7pm4ddrmn0ak 
       foreign key (exam_sheet_id) 
       references exam_sheet
Hibernate: 
    alter table if exists exam_sheet_selected_unit 
       add constraint FK2xbjk8ujtgcok7pm4ddrmn0ak 
       foreign key (exam_sheet_id) 
       references exam_sheet
[[2m2025-09-01 21:41:07.442[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    alter table if exists exam_sheet_selected_unit 
       add constraint FK42oxhmr6y5rnn12m7gf4cqcwf 
       foreign key (unit_id) 
       references unit
Hibernate: 
    alter table if exists exam_sheet_selected_unit 
       add constraint FK42oxhmr6y5rnn12m7gf4cqcwf 
       foreign key (unit_id) 
       references unit
[[2m2025-09-01 21:41:07.442[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    alter table if exists exam_submission 
       add constraint FKhpbxc166py57lqe75pkrbw4b5 
       foreign key (exam_id) 
       references exam
Hibernate: 
    alter table if exists exam_submission 
       add constraint FKhpbxc166py57lqe75pkrbw4b5 
       foreign key (exam_id) 
       references exam
[[2m2025-09-01 21:41:07.443[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    alter table if exists exam_submission 
       add constraint FKl6b1w8qnpshafs2cna6uo7ej2 
       foreign key (student_id) 
       references users
Hibernate: 
    alter table if exists exam_submission 
       add constraint FKl6b1w8qnpshafs2cna6uo7ej2 
       foreign key (student_id) 
       references users
[[2m2025-09-01 21:41:07.444[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    alter table if exists question 
       add constraint FKs1tl5ukggla0y9dkixxfimpwx 
       foreign key (unit_id) 
       references unit
Hibernate: 
    alter table if exists question 
       add constraint FKs1tl5ukggla0y9dkixxfimpwx 
       foreign key (unit_id) 
       references unit
[[2m2025-09-01 21:41:07.445[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    alter table if exists student_answer_sheet 
       add constraint FK63r296id7mv5ydnla6anonx3b 
       foreign key (submission_id) 
       references exam_submission
Hibernate: 
    alter table if exists student_answer_sheet 
       add constraint FK63r296id7mv5ydnla6anonx3b 
       foreign key (submission_id) 
       references exam_submission
[[2m2025-09-01 21:41:07.445[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    alter table if exists student_answer_sheet 
       add constraint FKqow3301uxhfpcrfp3fdheyrt0 
       foreign key (question_id) 
       references question
Hibernate: 
    alter table if exists student_answer_sheet 
       add constraint FKqow3301uxhfpcrfp3fdheyrt0 
       foreign key (question_id) 
       references question
[[2m2025-09-01 21:41:07.446[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    alter table if exists unit 
       add constraint FKjkc14skpio53pwkriddt28c27 
       foreign key (subcategory_id) 
       references unit_subcategory
Hibernate: 
    alter table if exists unit 
       add constraint FKjkc14skpio53pwkriddt28c27 
       foreign key (subcategory_id) 
       references unit_subcategory
[[2m2025-09-01 21:41:07.447[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    alter table if exists unit_subcategory 
       add constraint FKjjsoskeu940jdm1ahqgg7tmhn 
       foreign key (category_id) 
       references unit_category
Hibernate: 
    alter table if exists unit_subcategory 
       add constraint FKjjsoskeu940jdm1ahqgg7tmhn 
       foreign key (category_id) 
       references unit_category
[[2m2025-09-01 21:41:07.448[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mj.LocalContainerEntityManagerFactoryBean[0;39m [2m:[0;39m Initialized JPA EntityManagerFactory for persistence unit 'default'
[[2m2025-09-01 21:41:07.613[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mc.i.springbackend.config.AiServerConfig [0;39m [2m:[0;39m AI 서버 WebClient 설정 시작: baseUrl=http://localhost:8000, connectTimeout=30초, responseTimeout=60초
[[2m2025-09-01 21:41:07.615[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mc.i.springbackend.config.AiServerConfig [0;39m [2m:[0;39m AI 서버 WebClient 설정 완료
[[2m2025-09-01 21:41:07.724[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mc.i.springbackend.config.S3Config       [0;39m [2m:[0;39m S3 클라이언트 생성 시작: region=ap-northeast-2, bucketName=
[[2m2025-09-01 21:41:07.741[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mc.i.springbackend.config.S3Config       [0;39m [2m:[0;39m S3 클라이언트 생성 완료
[[2m2025-09-01 21:41:07.750[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mc.i.springbackend.config.S3Config       [0;39m [2m:[0;39m S3 프리사인드 URL 생성기 생성 시작: region=ap-northeast-2, urlDuration=60분
[[2m2025-09-01 21:41:07.752[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mc.i.springbackend.config.S3Config       [0;39m [2m:[0;39m S3 프리사인드 URL 생성기 생성 완료
[[2m2025-09-01 21:41:07.812[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mc.i.springbackend.config.S3Config       [0;39m [2m:[0;39m S3 비동기 클라이언트 생성 시작: region=ap-northeast-2
[[2m2025-09-01 21:41:07.815[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mc.i.springbackend.config.S3Config       [0;39m [2m:[0;39m S3 비동기 클라이언트 생성 완료
[[2m2025-09-01 21:41:07.824[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mc.i.springbackend.config.S3Config       [0;39m [2m:[0;39m S3 Transfer Manager 생성 시작: minPartSize=8MB
[[2m2025-09-01 21:41:07.825[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mc.i.springbackend.config.S3Config       [0;39m [2m:[0;39m S3 Transfer Manager 생성 완료
[[2m2025-09-01 21:41:07.915[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mr$InitializeUserDetailsManagerConfigurer[0;39m [2m:[0;39m Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService
[[2m2025-09-01 21:41:07.947[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.s.web.DefaultSecurityFilterChain    [0;39m [2m:[0;39m Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
[[2m2025-09-01 21:41:08.033[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.b.a.h2.H2ConsoleAutoConfiguration   [0;39m [2m:[0;39m H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
[[2m2025-09-01 21:41:08.052[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.b.d.a.OptionalLiveReloadServer      [0;39m [2m:[0;39m LiveReload server is running on port 35729
[[2m2025-09-01 21:41:08.063[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.coyote.http11.Http11NioProtocol     [0;39m [2m:[0;39m Starting ProtocolHandler ["http-nio-3055"]
[[2m2025-09-01 21:41:08.065[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.b.w.embedded.tomcat.TomcatWebServer [0;39m [2m:[0;39m Tomcat started on port 3055 (http) with context path '/api'
[[2m2025-09-01 21:41:08.068[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mc.i.s.SpringBackendApplication          [0;39m [2m:[0;39m Started SpringBackendApplication in 1.609 seconds (process running for 734.234)
[[2m2025-09-01 21:41:08.070[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    /* <criteria> */ select
        u1_0.id,
        u1_0.academy_name,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.grade,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    /* <criteria> */ select
        u1_0.id,
        u1_0.academy_name,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.grade,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
[[2m2025-09-01 21:41:08.135[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mc.i.s.config.TestDataInitializer        [0;39m [2m:[0;39m 테스트 관리자 계정 생성 완료: username=admin, id=0199054b-a727-780a-ac38-ee9aab5e70ae
[[2m2025-09-01 21:41:08.135[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mc.i.s.config.TestDataInitializer        [0;39m [2m:[0;39m 테스트 로그인 정보 - 사용자명: admin, 비밀번호: password
[[2m2025-09-01 21:41:08.136[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    /* insert for
        com.iroomclass.springbackend.domain.user.entity.User */insert 
    into
        users (academy_name, birth_date, created_at, email, grade, name, password, phone, role, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    /* insert for
        com.iroomclass.springbackend.domain.user.entity.User */insert 
    into
        users (academy_name, birth_date, created_at, email, grade, name, password, phone, role, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[[2m2025-09-01 21:41:08.138[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.ConditionEvaluationDeltaLoggingListener[0;39m [2m:[0;39m Condition evaluation unchanged
[[2m2025-09-01 21:50:15.521[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[   File Watcher][0;39m [36mrtingClassPathChangeChangedEventListener[0;39m [2m:[0;39m Restarting due to 41 class path changes (0 additions, 41 deletions, 0 modifications)
[[2m2025-09-01 21:50:15.523[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[       Thread-9][0;39m [36mo.s.b.w.e.tomcat.GracefulShutdown       [0;39m [2m:[0;39m Commencing graceful shutdown. Waiting for active requests to complete
[[2m2025-09-01 21:50:15.524[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[tomcat-shutdown][0;39m [36mo.a.coyote.http11.Http11NioProtocol     [0;39m [2m:[0;39m Pausing ProtocolHandler ["http-nio-3055"]
[[2m2025-09-01 21:50:15.528[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[tomcat-shutdown][0;39m [36mo.s.b.w.e.tomcat.GracefulShutdown       [0;39m [2m:[0;39m Graceful shutdown complete
[[2m2025-09-01 21:50:15.528[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[       Thread-9][0;39m [36mo.a.coyote.http11.Http11NioProtocol     [0;39m [2m:[0;39m Stopping ProtocolHandler ["http-nio-3055"]
[[2m2025-09-01 21:50:17.547[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[       Thread-9][0;39m [36mj.LocalContainerEntityManagerFactoryBean[0;39m [2m:[0;39m Closing JPA EntityManagerFactory for persistence unit 'default'
[[2m2025-09-01 21:50:17.548[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[       Thread-9][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists admin cascade 
Hibernate: 
    drop table if exists admin cascade 
[[2m2025-09-01 21:50:17.548[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[       Thread-9][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists exam cascade 
Hibernate: 
    drop table if exists exam cascade 
[[2m2025-09-01 21:50:17.549[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[       Thread-9][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists exam_document cascade 
Hibernate: 
    drop table if exists exam_document cascade 
[[2m2025-09-01 21:50:17.549[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[       Thread-9][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists exam_result cascade 
Hibernate: 
    drop table if exists exam_result cascade 
[[2m2025-09-01 21:50:17.549[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[       Thread-9][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists exam_result_question cascade 
Hibernate: 
    drop table if exists exam_result_question cascade 
[[2m2025-09-01 21:50:17.550[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[       Thread-9][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists exam_sheet cascade 
Hibernate: 
    drop table if exists exam_sheet cascade 
[[2m2025-09-01 21:50:17.550[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[       Thread-9][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists exam_sheet_question cascade 
Hibernate: 
    drop table if exists exam_sheet_question cascade 
[[2m2025-09-01 21:50:17.551[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[       Thread-9][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists exam_sheet_selected_unit cascade 
Hibernate: 
    drop table if exists exam_sheet_selected_unit cascade 
[[2m2025-09-01 21:50:17.551[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[       Thread-9][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists exam_submission cascade 
Hibernate: 
    drop table if exists exam_submission cascade 
[[2m2025-09-01 21:50:17.551[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[       Thread-9][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists question cascade 
Hibernate: 
    drop table if exists question cascade 
[[2m2025-09-01 21:50:17.552[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[       Thread-9][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists student cascade 
Hibernate: 
    drop table if exists student cascade 
[[2m2025-09-01 21:50:17.552[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[       Thread-9][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists student_answer_sheet cascade 
Hibernate: 
    drop table if exists student_answer_sheet cascade 
[[2m2025-09-01 21:50:17.552[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[       Thread-9][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists unit cascade 
Hibernate: 
    drop table if exists unit cascade 
[[2m2025-09-01 21:50:17.552[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[       Thread-9][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists unit_category cascade 
Hibernate: 
    drop table if exists unit_category cascade 
[[2m2025-09-01 21:50:17.553[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[       Thread-9][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists unit_subcategory cascade 
Hibernate: 
    drop table if exists unit_subcategory cascade 
[[2m2025-09-01 21:50:17.553[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[       Thread-9][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists users cascade 
Hibernate: 
    drop table if exists users cascade 
[[2m2025-09-01 21:50:17.554[0;39m] [33m WARN[0;39m [35m3096282[0;39m [2m---[0;39m [2m[       Thread-9][0;39m [36mo.s.b.f.support.DisposableBeanAdapter   [0;39m [2m:[0;39m Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-232]
[[2m2025-09-01 21:50:17.554[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[       Thread-9][0;39m [36mcom.zaxxer.hikari.HikariDataSource      [0;39m [2m:[0;39m HikariPool-2 - Shutdown initiated...
[[2m2025-09-01 21:50:17.555[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[       Thread-9][0;39m [36mcom.zaxxer.hikari.HikariDataSource      [0;39m [2m:[0;39m HikariPool-2 - Shutdown completed.
Standard Commons Logging discovery in action with spring-jcl: please remove commons-logging.jar from classpath in order to avoid potential conflicts
21:50:17,624 |-WARN in ch.qos.logback.core.joran.action.ConversionRuleAction - [converterClass] attribute is deprecated and replaced by [class]. See element [conversionRule] near line 11
21:50:17,624 |-WARN in ch.qos.logback.core.joran.action.ConversionRuleAction - [converterClass] attribute is deprecated and replaced by [class]. See element [conversionRule] near line 13
21:50:17,624 |-WARN in ch.qos.logback.core.joran.action.ConversionRuleAction - [converterClass] attribute is deprecated and replaced by [class]. See element [conversionRule] near line 15

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/

[32m :: Spring Boot :: [39m              [2m (v3.5.4)[0;39m

[[2m2025-09-01 21:50:17.633[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mc.i.s.SpringBackendApplication          [0;39m [2m:[0;39m Starting SpringBackendApplication using Java 21.0.8 with PID 3096282 (/home/aiden/programming/final-project/iroom-backend-springboot/build/classes/java/main started by aiden in /home/aiden/programming/final-project/iroom-backend-springboot)
[[2m2025-09-01 21:50:17.634[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mc.i.s.SpringBackendApplication          [0;39m [2m:[0;39m Running with Spring Boot v3.5.4, Spring v6.2.9
[[2m2025-09-01 21:50:17.634[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mc.i.s.SpringBackendApplication          [0;39m [2m:[0;39m The following 1 profile is active: "test-local"
[[2m2025-09-01 21:50:17.940[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.s.d.r.c.RepositoryConfigurationDelegate[0;39m [2m:[0;39m Multiple Spring Data modules found, entering strict repository configuration mode
[[2m2025-09-01 21:50:17.940[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.s.d.r.c.RepositoryConfigurationDelegate[0;39m [2m:[0;39m Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[[2m2025-09-01 21:50:17.975[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.s.d.r.c.RepositoryConfigurationDelegate[0;39m [2m:[0;39m Finished Spring Data repository scanning in 32 ms. Found 16 JPA repository interfaces.
[[2m2025-09-01 21:50:17.978[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.s.d.r.c.RepositoryConfigurationDelegate[0;39m [2m:[0;39m Multiple Spring Data modules found, entering strict repository configuration mode
[[2m2025-09-01 21:50:17.978[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.s.d.r.c.RepositoryConfigurationDelegate[0;39m [2m:[0;39m Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[[2m2025-09-01 21:50:17.983[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.RepositoryConfigurationExtensionSupport[0;39m [2m:[0;39m Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.iroomclass.springbackend.domain.curriculum.repository.UnitCategoryRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[[2m2025-09-01 21:50:17.983[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.RepositoryConfigurationExtensionSupport[0;39m [2m:[0;39m Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.iroomclass.springbackend.domain.curriculum.repository.UnitRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[[2m2025-09-01 21:50:17.983[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.RepositoryConfigurationExtensionSupport[0;39m [2m:[0;39m Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.iroomclass.springbackend.domain.curriculum.repository.UnitSubcategoryRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[[2m2025-09-01 21:50:17.983[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.RepositoryConfigurationExtensionSupport[0;39m [2m:[0;39m Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.iroomclass.springbackend.domain.exam.repository.ExamDocumentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[[2m2025-09-01 21:50:17.984[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.RepositoryConfigurationExtensionSupport[0;39m [2m:[0;39m Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.iroomclass.springbackend.domain.exam.repository.ExamRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[[2m2025-09-01 21:50:17.984[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.RepositoryConfigurationExtensionSupport[0;39m [2m:[0;39m Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.iroomclass.springbackend.domain.exam.repository.ExamResultRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[[2m2025-09-01 21:50:17.984[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.RepositoryConfigurationExtensionSupport[0;39m [2m:[0;39m Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.iroomclass.springbackend.domain.exam.repository.ExamSheetQuestionRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[[2m2025-09-01 21:50:17.984[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.RepositoryConfigurationExtensionSupport[0;39m [2m:[0;39m Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.iroomclass.springbackend.domain.exam.repository.ExamSheetRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[[2m2025-09-01 21:50:17.984[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.RepositoryConfigurationExtensionSupport[0;39m [2m:[0;39m Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.iroomclass.springbackend.domain.exam.repository.ExamSheetSelectedUnitRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[[2m2025-09-01 21:50:17.984[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.RepositoryConfigurationExtensionSupport[0;39m [2m:[0;39m Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.iroomclass.springbackend.domain.exam.repository.ExamSubmissionRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[[2m2025-09-01 21:50:17.984[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.RepositoryConfigurationExtensionSupport[0;39m [2m:[0;39m Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.iroomclass.springbackend.domain.exam.repository.QuestionRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[[2m2025-09-01 21:50:17.984[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.RepositoryConfigurationExtensionSupport[0;39m [2m:[0;39m Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.iroomclass.springbackend.domain.exam.repository.QuestionResultRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[[2m2025-09-01 21:50:17.984[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.RepositoryConfigurationExtensionSupport[0;39m [2m:[0;39m Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.iroomclass.springbackend.domain.exam.repository.StudentAnswerSheetRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[[2m2025-09-01 21:50:17.984[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.RepositoryConfigurationExtensionSupport[0;39m [2m:[0;39m Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.iroomclass.springbackend.domain.user.repository.StudentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[[2m2025-09-01 21:50:17.984[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.RepositoryConfigurationExtensionSupport[0;39m [2m:[0;39m Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.iroomclass.springbackend.domain.user.repository.TeacherRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[[2m2025-09-01 21:50:17.985[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.RepositoryConfigurationExtensionSupport[0;39m [2m:[0;39m Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.iroomclass.springbackend.domain.user.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[[2m2025-09-01 21:50:17.985[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.s.d.r.c.RepositoryConfigurationDelegate[0;39m [2m:[0;39m Finished Spring Data repository scanning in 5 ms. Found 0 Redis repository interfaces.
[[2m2025-09-01 21:50:18.126[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.b.w.embedded.tomcat.TomcatWebServer [0;39m [2m:[0;39m Tomcat initialized with port 3055 (http)
[[2m2025-09-01 21:50:18.127[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.coyote.http11.Http11NioProtocol     [0;39m [2m:[0;39m Initializing ProtocolHandler ["http-nio-3055"]
[[2m2025-09-01 21:50:18.127[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.apache.catalina.core.StandardService  [0;39m [2m:[0;39m Starting service [Tomcat]
[[2m2025-09-01 21:50:18.128[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.apache.catalina.core.StandardEngine   [0;39m [2m:[0;39m Starting Servlet engine: [Apache Tomcat/10.1.43]
[[2m2025-09-01 21:50:18.136[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.c.c.C.[Tomcat].[localhost].[/api]   [0;39m [2m:[0;39m Initializing Spring embedded WebApplicationContext
[[2m2025-09-01 21:50:18.136[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mw.s.c.ServletWebServerApplicationContext[0;39m [2m:[0;39m Root WebApplicationContext: initialization completed in 501 ms
Standard Commons Logging discovery in action with spring-jcl: please remove commons-logging.jar from classpath in order to avoid potential conflicts
[[2m2025-09-01 21:50:18.150[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mc.i.s.config.JwtAuthenticationFilter    [0;39m [2m:[0;39m Filter 'jwtAuthenticationFilter' configured for use
[[2m2025-09-01 21:50:18.188[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.hibernate.jpa.internal.util.LogHelper [0;39m [2m:[0;39m HHH000204: Processing PersistenceUnitInfo [name: default]
[[2m2025-09-01 21:50:18.190[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.h.c.internal.RegionFactoryInitiator   [0;39m [2m:[0;39m HHH000026: Second-level cache disabled
[[2m2025-09-01 21:50:18.198[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.o.j.p.SpringPersistenceUnitInfo     [0;39m [2m:[0;39m No LoadTimeWeaver setup: ignoring JPA class transformer
[[2m2025-09-01 21:50:18.198[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mcom.zaxxer.hikari.HikariDataSource      [0;39m [2m:[0;39m HikariPool-3 - Starting...
[[2m2025-09-01 21:50:18.200[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mcom.zaxxer.hikari.pool.HikariPool       [0;39m [2m:[0;39m HikariPool-3 - Added connection conn20: url=jdbc:h2:mem:testdb user=SA
[[2m2025-09-01 21:50:18.200[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mcom.zaxxer.hikari.HikariDataSource      [0;39m [2m:[0;39m HikariPool-3 - Start completed.
[[2m2025-09-01 21:50:18.200[0;39m] [33m WARN[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.orm.deprecation           [0;39m [2m:[0;39m HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
[[2m2025-09-01 21:50:18.201[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.orm.connections.pooling   [0;39m [2m:[0;39m HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-3)']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
[[2m2025-09-01 21:50:18.350[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.h.e.t.j.p.i.JtaPlatformInitiator      [0;39m [2m:[0;39m HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
[[2m2025-09-01 21:50:18.350[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists admin cascade 
Hibernate: 
    drop table if exists admin cascade 
[[2m2025-09-01 21:50:18.350[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists exam cascade 
Hibernate: 
    drop table if exists exam cascade 
[[2m2025-09-01 21:50:18.350[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists exam_document cascade 
Hibernate: 
    drop table if exists exam_document cascade 
[[2m2025-09-01 21:50:18.351[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists exam_result cascade 
Hibernate: 
    drop table if exists exam_result cascade 
[[2m2025-09-01 21:50:18.351[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists exam_result_question cascade 
Hibernate: 
    drop table if exists exam_result_question cascade 
[[2m2025-09-01 21:50:18.351[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists exam_sheet cascade 
Hibernate: 
    drop table if exists exam_sheet cascade 
[[2m2025-09-01 21:50:18.351[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists exam_sheet_question cascade 
Hibernate: 
    drop table if exists exam_sheet_question cascade 
[[2m2025-09-01 21:50:18.351[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists exam_sheet_selected_unit cascade 
Hibernate: 
    drop table if exists exam_sheet_selected_unit cascade 
[[2m2025-09-01 21:50:18.351[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists exam_submission cascade 
Hibernate: 
    drop table if exists exam_submission cascade 
[[2m2025-09-01 21:50:18.351[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists question cascade 
Hibernate: 
    drop table if exists question cascade 
[[2m2025-09-01 21:50:18.351[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists student cascade 
Hibernate: 
    drop table if exists student cascade 
[[2m2025-09-01 21:50:18.352[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists student_answer_sheet cascade 
Hibernate: 
    drop table if exists student_answer_sheet cascade 
[[2m2025-09-01 21:50:18.352[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists unit cascade 
Hibernate: 
    drop table if exists unit cascade 
[[2m2025-09-01 21:50:18.352[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists unit_category cascade 
Hibernate: 
    drop table if exists unit_category cascade 
[[2m2025-09-01 21:50:18.352[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists unit_subcategory cascade 
Hibernate: 
    drop table if exists unit_subcategory cascade 
[[2m2025-09-01 21:50:18.352[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists users cascade 
Hibernate: 
    drop table if exists users cascade 
[[2m2025-09-01 21:50:18.352[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    create table admin (
        id BINARY(16) not null,
        name varchar(50),
        username varchar(50) not null unique,
        academy_name varchar(100),
        email varchar(100),
        password varchar(255) not null,
        primary key (id)
    )
Hibernate: 
    create table admin (
        id BINARY(16) not null,
        name varchar(50),
        username varchar(50) not null unique,
        academy_name varchar(100),
        email varchar(100),
        password varchar(255) not null,
        primary key (id)
    )
[[2m2025-09-01 21:50:18.353[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    create table exam (
        grade integer not null,
        student_count integer not null,
        created_at timestamp(6) not null,
        exam_sheet_id BINARY(16) not null,
        id BINARY(16) not null,
        exam_name varchar(100) not null,
        content TEXT,
        qr_code_url LONGTEXT,
        primary key (id)
    )
Hibernate: 
    create table exam (
        grade integer not null,
        student_count integer not null,
        created_at timestamp(6) not null,
        exam_sheet_id BINARY(16) not null,
        id BINARY(16) not null,
        exam_name varchar(100) not null,
        content TEXT,
        qr_code_url LONGTEXT,
        primary key (id)
    )
[[2m2025-09-01 21:50:18.354[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    create table exam_document (
        exam_sheet_id BINARY(16) not null,
        id BINARY(16) not null,
        document_content LONGTEXT not null,
        qr_code_url LONGTEXT,
        document_type enum ('CORRECT_ANSWER_SHEET','EXAM_SHEET','STUDENT_ANSWER_SHEET') not null,
        primary key (id)
    )
Hibernate: 
    create table exam_document (
        exam_sheet_id BINARY(16) not null,
        id BINARY(16) not null,
        document_content LONGTEXT not null,
        qr_code_url LONGTEXT,
        document_type enum ('CORRECT_ANSWER_SHEET','EXAM_SHEET','STUDENT_ANSWER_SHEET') not null,
        primary key (id)
    )
[[2m2025-09-01 21:50:18.354[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    create table exam_result (
        total_score integer,
        version integer not null,
        created_at timestamp(6) not null,
        graded_at timestamp(6) not null,
        updated_at timestamp(6) not null,
        exam_sheet_id BINARY(16) not null,
        id BINARY(16) not null,
        submission_id BINARY(16) not null,
        grading_comment TEXT,
        status enum ('COMPLETED','IN_PROGRESS','PENDING','REGRADED') not null,
        primary key (id)
    )
Hibernate: 
    create table exam_result (
        total_score integer,
        version integer not null,
        created_at timestamp(6) not null,
        graded_at timestamp(6) not null,
        updated_at timestamp(6) not null,
        exam_sheet_id BINARY(16) not null,
        id BINARY(16) not null,
        submission_id BINARY(16) not null,
        grading_comment TEXT,
        status enum ('COMPLETED','IN_PROGRESS','PENDING','REGRADED') not null,
        primary key (id)
    )
[[2m2025-09-01 21:50:18.355[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    create table exam_result_question (
        confidence_score numeric(3,2),
        is_correct boolean,
        max_score integer not null,
        score integer,
        created_at timestamp(6) not null,
        updated_at timestamp(6) not null,
        answer_id BINARY(16) not null,
        exam_result_id BINARY(16) not null,
        id BINARY(16) not null,
        question_id BINARY(16) not null,
        grading_comment TEXT,
        grading_method enum ('AI_ASSISTED','AUTO','MANUAL') not null,
        primary key (id)
    )
Hibernate: 
    create table exam_result_question (
        confidence_score numeric(3,2),
        is_correct boolean,
        max_score integer not null,
        score integer,
        created_at timestamp(6) not null,
        updated_at timestamp(6) not null,
        answer_id BINARY(16) not null,
        exam_result_id BINARY(16) not null,
        id BINARY(16) not null,
        question_id BINARY(16) not null,
        grading_comment TEXT,
        grading_method enum ('AI_ASSISTED','AUTO','MANUAL') not null,
        primary key (id)
    )
[[2m2025-09-01 21:50:18.355[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    create table exam_sheet (
        grade integer not null,
        multiple_choice_count integer not null,
        subjective_count integer not null,
        total_questions integer not null,
        created_at timestamp(6) not null,
        updated_at timestamp(6) not null,
        id BINARY(16) not null,
        exam_name varchar(100) not null,
        primary key (id)
    )
Hibernate: 
    create table exam_sheet (
        grade integer not null,
        multiple_choice_count integer not null,
        subjective_count integer not null,
        total_questions integer not null,
        created_at timestamp(6) not null,
        updated_at timestamp(6) not null,
        id BINARY(16) not null,
        exam_name varchar(100) not null,
        primary key (id)
    )
[[2m2025-09-01 21:50:18.355[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    create table exam_sheet_question (
        points integer not null,
        seq_no integer not null,
        exam_sheet_id BINARY(16) not null,
        id BINARY(16) not null,
        question_id BINARY(16) not null,
        selection_method enum ('MANUAL','RANDOM') not null,
        primary key (id)
    )
Hibernate: 
    create table exam_sheet_question (
        points integer not null,
        seq_no integer not null,
        exam_sheet_id BINARY(16) not null,
        id BINARY(16) not null,
        question_id BINARY(16) not null,
        selection_method enum ('MANUAL','RANDOM') not null,
        primary key (id)
    )
[[2m2025-09-01 21:50:18.356[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    create table exam_sheet_selected_unit (
        exam_sheet_id BINARY(16) not null,
        id BINARY(16) not null,
        unit_id BINARY(16) not null,
        primary key (id)
    )
Hibernate: 
    create table exam_sheet_selected_unit (
        exam_sheet_id BINARY(16) not null,
        id BINARY(16) not null,
        unit_id BINARY(16) not null,
        primary key (id)
    )
[[2m2025-09-01 21:50:18.356[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    create table exam_submission (
        total_score integer,
        submitted_at timestamp(6) not null,
        exam_id BINARY(16) not null,
        id BINARY(16) not null,
        user_id BINARY(16) not null,
        primary key (id)
    )
Hibernate: 
    create table exam_submission (
        total_score integer,
        submitted_at timestamp(6) not null,
        exam_id BINARY(16) not null,
        id BINARY(16) not null,
        user_id BINARY(16) not null,
        primary key (id)
    )
[[2m2025-09-01 21:50:18.357[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    create table question (
        correct_choice integer,
        points integer,
        id BINARY(16) not null,
        unit_id BINARY(16) not null,
        answer_text LONGTEXT not null,
        choices JSON,
        image JSON,
        question_text TEXT not null,
        scoring_rubric TEXT,
        difficulty enum ('상','중','하') not null,
        question_type VARCHAR(20) DEFAULT 'SUBJECTIVE' not null,
        primary key (id)
    )
Hibernate: 
    create table question (
        correct_choice integer,
        points integer,
        id BINARY(16) not null,
        unit_id BINARY(16) not null,
        answer_text LONGTEXT not null,
        choices JSON,
        image JSON,
        question_text TEXT not null,
        scoring_rubric TEXT,
        difficulty enum ('상','중','하') not null,
        question_type VARCHAR(20) DEFAULT 'SUBJECTIVE' not null,
        primary key (id)
    )
[[2m2025-09-01 21:50:18.357[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    create table student (
        birth_date date not null,
        grade integer not null,
        id BINARY(16) not null,
        phone varchar(20),
        name varchar(50) not null,
        primary key (id)
    )
Hibernate: 
    create table student (
        birth_date date not null,
        grade integer not null,
        id BINARY(16) not null,
        phone varchar(20),
        name varchar(50) not null,
        primary key (id)
    )
[[2m2025-09-01 21:50:18.357[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    create table student_answer_sheet (
        is_correct boolean,
        score integer,
        selected_choice integer,
        id BINARY(16) not null,
        question_id BINARY(16) not null,
        submission_id BINARY(16) not null,
        answer_image_url varchar(500),
        answer_text varchar(1000),
        ai_solution_process TEXT,
        primary key (id)
    )
Hibernate: 
    create table student_answer_sheet (
        is_correct boolean,
        score integer,
        selected_choice integer,
        id BINARY(16) not null,
        question_id BINARY(16) not null,
        submission_id BINARY(16) not null,
        answer_image_url varchar(500),
        answer_text varchar(1000),
        ai_solution_process TEXT,
        primary key (id)
    )
[[2m2025-09-01 21:50:18.358[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    create table unit (
        display_order integer not null,
        grade integer not null,
        id BINARY(16) not null,
        subcategory_id BINARY(16) not null,
        unit_code varchar(30) not null unique,
        unit_name varchar(100) not null,
        description TEXT,
        primary key (id)
    )
Hibernate: 
    create table unit (
        display_order integer not null,
        grade integer not null,
        id BINARY(16) not null,
        subcategory_id BINARY(16) not null,
        unit_code varchar(30) not null unique,
        unit_name varchar(100) not null,
        description TEXT,
        primary key (id)
    )
[[2m2025-09-01 21:50:18.358[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    create table unit_category (
        display_order integer not null,
        id BINARY(16) not null,
        category_name varchar(50) not null,
        description varchar(200),
        primary key (id)
    )
Hibernate: 
    create table unit_category (
        display_order integer not null,
        id BINARY(16) not null,
        category_name varchar(50) not null,
        description varchar(200),
        primary key (id)
    )
[[2m2025-09-01 21:50:18.359[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    create table unit_subcategory (
        display_order integer not null,
        category_id BINARY(16) not null,
        id BINARY(16) not null,
        subcategory_name varchar(100) not null,
        description varchar(200),
        primary key (id)
    )
Hibernate: 
    create table unit_subcategory (
        display_order integer not null,
        category_id BINARY(16) not null,
        id BINARY(16) not null,
        subcategory_name varchar(100) not null,
        description varchar(200),
        primary key (id)
    )
[[2m2025-09-01 21:50:18.359[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    create table users (
        birth_date date,
        grade integer,
        created_at timestamp(6),
        updated_at timestamp(6),
        id BINARY(16) not null,
        phone varchar(20),
        name varchar(50) not null,
        username varchar(50) unique,
        academy_name varchar(100),
        email varchar(100),
        password varchar(255),
        role enum ('ADMIN','STUDENT') not null,
        primary key (id)
    )
Hibernate: 
    create table users (
        birth_date date,
        grade integer,
        created_at timestamp(6),
        updated_at timestamp(6),
        id BINARY(16) not null,
        phone varchar(20),
        name varchar(50) not null,
        username varchar(50) unique,
        academy_name varchar(100),
        email varchar(100),
        password varchar(255),
        role enum ('ADMIN','STUDENT') not null,
        primary key (id)
    )
[[2m2025-09-01 21:50:18.360[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    alter table if exists exam 
       add constraint FKslua7xmmjqpru9m6c0krepsbv 
       foreign key (exam_sheet_id) 
       references exam_sheet
Hibernate: 
    alter table if exists exam 
       add constraint FKslua7xmmjqpru9m6c0krepsbv 
       foreign key (exam_sheet_id) 
       references exam_sheet
[[2m2025-09-01 21:50:18.360[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    alter table if exists exam_document 
       add constraint FKnx1cqh8l78dxanvxg0bef7ga6 
       foreign key (exam_sheet_id) 
       references exam_sheet
Hibernate: 
    alter table if exists exam_document 
       add constraint FKnx1cqh8l78dxanvxg0bef7ga6 
       foreign key (exam_sheet_id) 
       references exam_sheet
[[2m2025-09-01 21:50:18.361[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    alter table if exists exam_result 
       add constraint FK1kxnkym7yfaed68mx1p9nujeb 
       foreign key (exam_sheet_id) 
       references exam_sheet
Hibernate: 
    alter table if exists exam_result 
       add constraint FK1kxnkym7yfaed68mx1p9nujeb 
       foreign key (exam_sheet_id) 
       references exam_sheet
[[2m2025-09-01 21:50:18.361[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    alter table if exists exam_result 
       add constraint FK5h2e7spb12bowlcpn9ni2iccg 
       foreign key (submission_id) 
       references exam_submission
Hibernate: 
    alter table if exists exam_result 
       add constraint FK5h2e7spb12bowlcpn9ni2iccg 
       foreign key (submission_id) 
       references exam_submission
[[2m2025-09-01 21:50:18.362[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    alter table if exists exam_result_question 
       add constraint FK5aqnya5vgl4c2nwvpv0ornhdu 
       foreign key (exam_result_id) 
       references exam_result
Hibernate: 
    alter table if exists exam_result_question 
       add constraint FK5aqnya5vgl4c2nwvpv0ornhdu 
       foreign key (exam_result_id) 
       references exam_result
[[2m2025-09-01 21:50:18.362[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    alter table if exists exam_result_question 
       add constraint FKsbejvkmejga9gx8m6hdidiox5 
       foreign key (question_id) 
       references question
Hibernate: 
    alter table if exists exam_result_question 
       add constraint FKsbejvkmejga9gx8m6hdidiox5 
       foreign key (question_id) 
       references question
[[2m2025-09-01 21:50:18.363[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    alter table if exists exam_result_question 
       add constraint FKo6t3vrkoarst5p5wfnssw7ask 
       foreign key (answer_id) 
       references student_answer_sheet
Hibernate: 
    alter table if exists exam_result_question 
       add constraint FKo6t3vrkoarst5p5wfnssw7ask 
       foreign key (answer_id) 
       references student_answer_sheet
[[2m2025-09-01 21:50:18.363[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    alter table if exists exam_sheet_question 
       add constraint FKhhbpusdcfj01oogq0c4s3dfit 
       foreign key (exam_sheet_id) 
       references exam_sheet
Hibernate: 
    alter table if exists exam_sheet_question 
       add constraint FKhhbpusdcfj01oogq0c4s3dfit 
       foreign key (exam_sheet_id) 
       references exam_sheet
[[2m2025-09-01 21:50:18.364[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    alter table if exists exam_sheet_question 
       add constraint FKrd319pw6ublwiqxr5ojji75o4 
       foreign key (question_id) 
       references question
Hibernate: 
    alter table if exists exam_sheet_question 
       add constraint FKrd319pw6ublwiqxr5ojji75o4 
       foreign key (question_id) 
       references question
[[2m2025-09-01 21:50:18.364[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    alter table if exists exam_sheet_selected_unit 
       add constraint FK2xbjk8ujtgcok7pm4ddrmn0ak 
       foreign key (exam_sheet_id) 
       references exam_sheet
Hibernate: 
    alter table if exists exam_sheet_selected_unit 
       add constraint FK2xbjk8ujtgcok7pm4ddrmn0ak 
       foreign key (exam_sheet_id) 
       references exam_sheet
[[2m2025-09-01 21:50:18.365[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    alter table if exists exam_sheet_selected_unit 
       add constraint FK42oxhmr6y5rnn12m7gf4cqcwf 
       foreign key (unit_id) 
       references unit
Hibernate: 
    alter table if exists exam_sheet_selected_unit 
       add constraint FK42oxhmr6y5rnn12m7gf4cqcwf 
       foreign key (unit_id) 
       references unit
[[2m2025-09-01 21:50:18.366[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    alter table if exists exam_submission 
       add constraint FKhpbxc166py57lqe75pkrbw4b5 
       foreign key (exam_id) 
       references exam
Hibernate: 
    alter table if exists exam_submission 
       add constraint FKhpbxc166py57lqe75pkrbw4b5 
       foreign key (exam_id) 
       references exam
[[2m2025-09-01 21:50:18.366[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    alter table if exists exam_submission 
       add constraint FK7skcbvnd69xvhvg5vrs5o028n 
       foreign key (user_id) 
       references users
Hibernate: 
    alter table if exists exam_submission 
       add constraint FK7skcbvnd69xvhvg5vrs5o028n 
       foreign key (user_id) 
       references users
[[2m2025-09-01 21:50:18.367[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    alter table if exists question 
       add constraint FKs1tl5ukggla0y9dkixxfimpwx 
       foreign key (unit_id) 
       references unit
Hibernate: 
    alter table if exists question 
       add constraint FKs1tl5ukggla0y9dkixxfimpwx 
       foreign key (unit_id) 
       references unit
[[2m2025-09-01 21:50:18.367[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    alter table if exists student_answer_sheet 
       add constraint FK63r296id7mv5ydnla6anonx3b 
       foreign key (submission_id) 
       references exam_submission
Hibernate: 
    alter table if exists student_answer_sheet 
       add constraint FK63r296id7mv5ydnla6anonx3b 
       foreign key (submission_id) 
       references exam_submission
[[2m2025-09-01 21:50:18.368[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    alter table if exists student_answer_sheet 
       add constraint FKqow3301uxhfpcrfp3fdheyrt0 
       foreign key (question_id) 
       references question
Hibernate: 
    alter table if exists student_answer_sheet 
       add constraint FKqow3301uxhfpcrfp3fdheyrt0 
       foreign key (question_id) 
       references question
[[2m2025-09-01 21:50:18.369[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    alter table if exists unit 
       add constraint FKjkc14skpio53pwkriddt28c27 
       foreign key (subcategory_id) 
       references unit_subcategory
Hibernate: 
    alter table if exists unit 
       add constraint FKjkc14skpio53pwkriddt28c27 
       foreign key (subcategory_id) 
       references unit_subcategory
[[2m2025-09-01 21:50:18.369[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    alter table if exists unit_subcategory 
       add constraint FKjjsoskeu940jdm1ahqgg7tmhn 
       foreign key (category_id) 
       references unit_category
Hibernate: 
    alter table if exists unit_subcategory 
       add constraint FKjjsoskeu940jdm1ahqgg7tmhn 
       foreign key (category_id) 
       references unit_category
[[2m2025-09-01 21:50:18.371[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mj.LocalContainerEntityManagerFactoryBean[0;39m [2m:[0;39m Initialized JPA EntityManagerFactory for persistence unit 'default'
[[2m2025-09-01 21:50:18.488[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mc.i.springbackend.config.AiServerConfig [0;39m [2m:[0;39m AI 서버 WebClient 설정 시작: baseUrl=http://localhost:8000, connectTimeout=30초, responseTimeout=60초
[[2m2025-09-01 21:50:18.489[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mc.i.springbackend.config.AiServerConfig [0;39m [2m:[0;39m AI 서버 WebClient 설정 완료
[[2m2025-09-01 21:50:18.584[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mc.i.springbackend.config.S3Config       [0;39m [2m:[0;39m S3 클라이언트 생성 시작: region=ap-northeast-2, bucketName=
[[2m2025-09-01 21:50:18.597[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mc.i.springbackend.config.S3Config       [0;39m [2m:[0;39m S3 클라이언트 생성 완료
[[2m2025-09-01 21:50:18.605[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mc.i.springbackend.config.S3Config       [0;39m [2m:[0;39m S3 프리사인드 URL 생성기 생성 시작: region=ap-northeast-2, urlDuration=60분
[[2m2025-09-01 21:50:18.607[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mc.i.springbackend.config.S3Config       [0;39m [2m:[0;39m S3 프리사인드 URL 생성기 생성 완료
[[2m2025-09-01 21:50:18.672[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mc.i.springbackend.config.S3Config       [0;39m [2m:[0;39m S3 비동기 클라이언트 생성 시작: region=ap-northeast-2
[[2m2025-09-01 21:50:18.676[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mc.i.springbackend.config.S3Config       [0;39m [2m:[0;39m S3 비동기 클라이언트 생성 완료
[[2m2025-09-01 21:50:18.691[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mc.i.springbackend.config.S3Config       [0;39m [2m:[0;39m S3 Transfer Manager 생성 시작: minPartSize=8MB
[[2m2025-09-01 21:50:18.692[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mc.i.springbackend.config.S3Config       [0;39m [2m:[0;39m S3 Transfer Manager 생성 완료
[[2m2025-09-01 21:50:18.762[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mr$InitializeUserDetailsManagerConfigurer[0;39m [2m:[0;39m Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService
[[2m2025-09-01 21:50:18.788[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.s.web.DefaultSecurityFilterChain    [0;39m [2m:[0;39m Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
[[2m2025-09-01 21:50:18.850[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.b.a.h2.H2ConsoleAutoConfiguration   [0;39m [2m:[0;39m H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
[[2m2025-09-01 21:50:18.867[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.b.d.a.OptionalLiveReloadServer      [0;39m [2m:[0;39m LiveReload server is running on port 35729
[[2m2025-09-01 21:50:18.877[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.coyote.http11.Http11NioProtocol     [0;39m [2m:[0;39m Starting ProtocolHandler ["http-nio-3055"]
[[2m2025-09-01 21:50:18.879[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.b.w.embedded.tomcat.TomcatWebServer [0;39m [2m:[0;39m Tomcat started on port 3055 (http) with context path '/api'
[[2m2025-09-01 21:50:18.881[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mc.i.s.SpringBackendApplication          [0;39m [2m:[0;39m Started SpringBackendApplication in 1.276 seconds (process running for 1285.048)
[[2m2025-09-01 21:50:18.883[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    /* <criteria> */ select
        u1_0.id,
        u1_0.academy_name,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.grade,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    /* <criteria> */ select
        u1_0.id,
        u1_0.academy_name,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.grade,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
[[2m2025-09-01 21:50:18.955[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mc.i.s.config.TestDataInitializer        [0;39m [2m:[0;39m 테스트 관리자 계정 생성 완료: username=admin, id=01990554-0eca-759c-9d52-0599c95bf188
[[2m2025-09-01 21:50:18.955[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mc.i.s.config.TestDataInitializer        [0;39m [2m:[0;39m 테스트 로그인 정보 - 사용자명: admin, 비밀번호: password
[[2m2025-09-01 21:50:18.955[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    /* insert for
        com.iroomclass.springbackend.domain.user.entity.User */insert 
    into
        users (academy_name, birth_date, created_at, email, grade, name, password, phone, role, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    /* insert for
        com.iroomclass.springbackend.domain.user.entity.User */insert 
    into
        users (academy_name, birth_date, created_at, email, grade, name, password, phone, role, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[[2m2025-09-01 21:50:18.956[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.ConditionEvaluationDeltaLoggingListener[0;39m [2m:[0;39m Condition evaluation unchanged
[[2m2025-09-01 21:50:20.280[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[   File Watcher][0;39m [36mrtingClassPathChangeChangedEventListener[0;39m [2m:[0;39m Restarting due to 41 class path changes (41 additions, 0 deletions, 0 modifications)
[[2m2025-09-01 21:50:20.282[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[      Thread-16][0;39m [36mo.s.b.w.e.tomcat.GracefulShutdown       [0;39m [2m:[0;39m Commencing graceful shutdown. Waiting for active requests to complete
[[2m2025-09-01 21:50:20.282[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[tomcat-shutdown][0;39m [36mo.a.coyote.http11.Http11NioProtocol     [0;39m [2m:[0;39m Pausing ProtocolHandler ["http-nio-3055"]
[[2m2025-09-01 21:50:20.283[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[tomcat-shutdown][0;39m [36mo.s.b.w.e.tomcat.GracefulShutdown       [0;39m [2m:[0;39m Graceful shutdown complete
[[2m2025-09-01 21:50:20.283[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[      Thread-16][0;39m [36mo.a.coyote.http11.Http11NioProtocol     [0;39m [2m:[0;39m Stopping ProtocolHandler ["http-nio-3055"]
[[2m2025-09-01 21:50:22.299[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[      Thread-16][0;39m [36mj.LocalContainerEntityManagerFactoryBean[0;39m [2m:[0;39m Closing JPA EntityManagerFactory for persistence unit 'default'
[[2m2025-09-01 21:50:22.299[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[      Thread-16][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists admin cascade 
Hibernate: 
    drop table if exists admin cascade 
[[2m2025-09-01 21:50:22.299[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[      Thread-16][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists exam cascade 
Hibernate: 
    drop table if exists exam cascade 
[[2m2025-09-01 21:50:22.300[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[      Thread-16][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists exam_document cascade 
Hibernate: 
    drop table if exists exam_document cascade 
[[2m2025-09-01 21:50:22.300[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[      Thread-16][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists exam_result cascade 
Hibernate: 
    drop table if exists exam_result cascade 
[[2m2025-09-01 21:50:22.300[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[      Thread-16][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists exam_result_question cascade 
Hibernate: 
    drop table if exists exam_result_question cascade 
[[2m2025-09-01 21:50:22.300[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[      Thread-16][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists exam_sheet cascade 
Hibernate: 
    drop table if exists exam_sheet cascade 
[[2m2025-09-01 21:50:22.301[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[      Thread-16][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists exam_sheet_question cascade 
Hibernate: 
    drop table if exists exam_sheet_question cascade 
[[2m2025-09-01 21:50:22.301[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[      Thread-16][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists exam_sheet_selected_unit cascade 
Hibernate: 
    drop table if exists exam_sheet_selected_unit cascade 
[[2m2025-09-01 21:50:22.301[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[      Thread-16][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists exam_submission cascade 
Hibernate: 
    drop table if exists exam_submission cascade 
[[2m2025-09-01 21:50:22.301[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[      Thread-16][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists question cascade 
Hibernate: 
    drop table if exists question cascade 
[[2m2025-09-01 21:50:22.302[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[      Thread-16][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists student cascade 
Hibernate: 
    drop table if exists student cascade 
[[2m2025-09-01 21:50:22.302[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[      Thread-16][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists student_answer_sheet cascade 
Hibernate: 
    drop table if exists student_answer_sheet cascade 
[[2m2025-09-01 21:50:22.302[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[      Thread-16][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists unit cascade 
Hibernate: 
    drop table if exists unit cascade 
[[2m2025-09-01 21:50:22.303[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[      Thread-16][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists unit_category cascade 
Hibernate: 
    drop table if exists unit_category cascade 
[[2m2025-09-01 21:50:22.303[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[      Thread-16][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists unit_subcategory cascade 
Hibernate: 
    drop table if exists unit_subcategory cascade 
[[2m2025-09-01 21:50:22.303[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[      Thread-16][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists users cascade 
Hibernate: 
    drop table if exists users cascade 
[[2m2025-09-01 21:50:22.304[0;39m] [33m WARN[0;39m [35m3096282[0;39m [2m---[0;39m [2m[      Thread-16][0;39m [36mo.s.b.f.support.DisposableBeanAdapter   [0;39m [2m:[0;39m Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-232]
[[2m2025-09-01 21:50:22.304[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[      Thread-16][0;39m [36mcom.zaxxer.hikari.HikariDataSource      [0;39m [2m:[0;39m HikariPool-3 - Shutdown initiated...
[[2m2025-09-01 21:50:22.305[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[      Thread-16][0;39m [36mcom.zaxxer.hikari.HikariDataSource      [0;39m [2m:[0;39m HikariPool-3 - Shutdown completed.
Standard Commons Logging discovery in action with spring-jcl: please remove commons-logging.jar from classpath in order to avoid potential conflicts
21:50:22,369 |-WARN in ch.qos.logback.core.joran.action.ConversionRuleAction - [converterClass] attribute is deprecated and replaced by [class]. See element [conversionRule] near line 11
21:50:22,369 |-WARN in ch.qos.logback.core.joran.action.ConversionRuleAction - [converterClass] attribute is deprecated and replaced by [class]. See element [conversionRule] near line 13
21:50:22,370 |-WARN in ch.qos.logback.core.joran.action.ConversionRuleAction - [converterClass] attribute is deprecated and replaced by [class]. See element [conversionRule] near line 15

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/

[32m :: Spring Boot :: [39m              [2m (v3.5.4)[0;39m

[[2m2025-09-01 21:50:22.376[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mc.i.s.SpringBackendApplication          [0;39m [2m:[0;39m Starting SpringBackendApplication using Java 21.0.8 with PID 3096282 (/home/aiden/programming/final-project/iroom-backend-springboot/build/classes/java/main started by aiden in /home/aiden/programming/final-project/iroom-backend-springboot)
[[2m2025-09-01 21:50:22.377[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mc.i.s.SpringBackendApplication          [0;39m [2m:[0;39m Running with Spring Boot v3.5.4, Spring v6.2.9
[[2m2025-09-01 21:50:22.377[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mc.i.s.SpringBackendApplication          [0;39m [2m:[0;39m The following 1 profile is active: "test-local"
[[2m2025-09-01 21:50:22.599[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.s.d.r.c.RepositoryConfigurationDelegate[0;39m [2m:[0;39m Multiple Spring Data modules found, entering strict repository configuration mode
[[2m2025-09-01 21:50:22.599[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.s.d.r.c.RepositoryConfigurationDelegate[0;39m [2m:[0;39m Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[[2m2025-09-01 21:50:22.624[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.s.d.r.c.RepositoryConfigurationDelegate[0;39m [2m:[0;39m Finished Spring Data repository scanning in 24 ms. Found 16 JPA repository interfaces.
[[2m2025-09-01 21:50:22.627[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.s.d.r.c.RepositoryConfigurationDelegate[0;39m [2m:[0;39m Multiple Spring Data modules found, entering strict repository configuration mode
[[2m2025-09-01 21:50:22.627[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.s.d.r.c.RepositoryConfigurationDelegate[0;39m [2m:[0;39m Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[[2m2025-09-01 21:50:22.631[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.RepositoryConfigurationExtensionSupport[0;39m [2m:[0;39m Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.iroomclass.springbackend.domain.curriculum.repository.UnitCategoryRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[[2m2025-09-01 21:50:22.631[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.RepositoryConfigurationExtensionSupport[0;39m [2m:[0;39m Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.iroomclass.springbackend.domain.curriculum.repository.UnitRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[[2m2025-09-01 21:50:22.632[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.RepositoryConfigurationExtensionSupport[0;39m [2m:[0;39m Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.iroomclass.springbackend.domain.curriculum.repository.UnitSubcategoryRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[[2m2025-09-01 21:50:22.632[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.RepositoryConfigurationExtensionSupport[0;39m [2m:[0;39m Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.iroomclass.springbackend.domain.exam.repository.ExamDocumentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[[2m2025-09-01 21:50:22.632[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.RepositoryConfigurationExtensionSupport[0;39m [2m:[0;39m Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.iroomclass.springbackend.domain.exam.repository.ExamRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[[2m2025-09-01 21:50:22.632[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.RepositoryConfigurationExtensionSupport[0;39m [2m:[0;39m Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.iroomclass.springbackend.domain.exam.repository.ExamResultRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[[2m2025-09-01 21:50:22.632[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.RepositoryConfigurationExtensionSupport[0;39m [2m:[0;39m Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.iroomclass.springbackend.domain.exam.repository.ExamSheetQuestionRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[[2m2025-09-01 21:50:22.632[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.RepositoryConfigurationExtensionSupport[0;39m [2m:[0;39m Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.iroomclass.springbackend.domain.exam.repository.ExamSheetRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[[2m2025-09-01 21:50:22.632[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.RepositoryConfigurationExtensionSupport[0;39m [2m:[0;39m Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.iroomclass.springbackend.domain.exam.repository.ExamSheetSelectedUnitRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[[2m2025-09-01 21:50:22.632[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.RepositoryConfigurationExtensionSupport[0;39m [2m:[0;39m Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.iroomclass.springbackend.domain.exam.repository.ExamSubmissionRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[[2m2025-09-01 21:50:22.632[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.RepositoryConfigurationExtensionSupport[0;39m [2m:[0;39m Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.iroomclass.springbackend.domain.exam.repository.QuestionRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[[2m2025-09-01 21:50:22.633[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.RepositoryConfigurationExtensionSupport[0;39m [2m:[0;39m Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.iroomclass.springbackend.domain.exam.repository.QuestionResultRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[[2m2025-09-01 21:50:22.633[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.RepositoryConfigurationExtensionSupport[0;39m [2m:[0;39m Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.iroomclass.springbackend.domain.exam.repository.StudentAnswerSheetRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[[2m2025-09-01 21:50:22.633[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.RepositoryConfigurationExtensionSupport[0;39m [2m:[0;39m Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.iroomclass.springbackend.domain.user.repository.StudentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[[2m2025-09-01 21:50:22.633[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.RepositoryConfigurationExtensionSupport[0;39m [2m:[0;39m Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.iroomclass.springbackend.domain.user.repository.TeacherRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[[2m2025-09-01 21:50:22.633[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.RepositoryConfigurationExtensionSupport[0;39m [2m:[0;39m Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.iroomclass.springbackend.domain.user.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[[2m2025-09-01 21:50:22.633[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.s.d.r.c.RepositoryConfigurationDelegate[0;39m [2m:[0;39m Finished Spring Data repository scanning in 5 ms. Found 0 Redis repository interfaces.
[[2m2025-09-01 21:50:22.710[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.b.w.embedded.tomcat.TomcatWebServer [0;39m [2m:[0;39m Tomcat initialized with port 3055 (http)
[[2m2025-09-01 21:50:22.711[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.coyote.http11.Http11NioProtocol     [0;39m [2m:[0;39m Initializing ProtocolHandler ["http-nio-3055"]
[[2m2025-09-01 21:50:22.711[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.apache.catalina.core.StandardService  [0;39m [2m:[0;39m Starting service [Tomcat]
[[2m2025-09-01 21:50:22.711[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.apache.catalina.core.StandardEngine   [0;39m [2m:[0;39m Starting Servlet engine: [Apache Tomcat/10.1.43]
[[2m2025-09-01 21:50:22.718[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.c.c.C.[Tomcat].[localhost].[/api]   [0;39m [2m:[0;39m Initializing Spring embedded WebApplicationContext
[[2m2025-09-01 21:50:22.718[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mw.s.c.ServletWebServerApplicationContext[0;39m [2m:[0;39m Root WebApplicationContext: initialization completed in 340 ms
Standard Commons Logging discovery in action with spring-jcl: please remove commons-logging.jar from classpath in order to avoid potential conflicts
[[2m2025-09-01 21:50:22.727[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mc.i.s.config.JwtAuthenticationFilter    [0;39m [2m:[0;39m Filter 'jwtAuthenticationFilter' configured for use
[[2m2025-09-01 21:50:22.746[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.hibernate.jpa.internal.util.LogHelper [0;39m [2m:[0;39m HHH000204: Processing PersistenceUnitInfo [name: default]
[[2m2025-09-01 21:50:22.747[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.h.c.internal.RegionFactoryInitiator   [0;39m [2m:[0;39m HHH000026: Second-level cache disabled
[[2m2025-09-01 21:50:22.751[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.o.j.p.SpringPersistenceUnitInfo     [0;39m [2m:[0;39m No LoadTimeWeaver setup: ignoring JPA class transformer
[[2m2025-09-01 21:50:22.752[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mcom.zaxxer.hikari.HikariDataSource      [0;39m [2m:[0;39m HikariPool-4 - Starting...
[[2m2025-09-01 21:50:22.753[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mcom.zaxxer.hikari.pool.HikariPool       [0;39m [2m:[0;39m HikariPool-4 - Added connection conn30: url=jdbc:h2:mem:testdb user=SA
[[2m2025-09-01 21:50:22.753[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mcom.zaxxer.hikari.HikariDataSource      [0;39m [2m:[0;39m HikariPool-4 - Start completed.
[[2m2025-09-01 21:50:22.754[0;39m] [33m WARN[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.orm.deprecation           [0;39m [2m:[0;39m HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
[[2m2025-09-01 21:50:22.754[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.orm.connections.pooling   [0;39m [2m:[0;39m HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-4)']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
[[2m2025-09-01 21:50:22.907[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.h.e.t.j.p.i.JtaPlatformInitiator      [0;39m [2m:[0;39m HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
[[2m2025-09-01 21:50:22.908[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists admin cascade 
Hibernate: 
    drop table if exists admin cascade 
[[2m2025-09-01 21:50:22.908[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists exam cascade 
Hibernate: 
    drop table if exists exam cascade 
[[2m2025-09-01 21:50:22.908[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists exam_document cascade 
Hibernate: 
    drop table if exists exam_document cascade 
[[2m2025-09-01 21:50:22.908[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists exam_result cascade 
Hibernate: 
    drop table if exists exam_result cascade 
[[2m2025-09-01 21:50:22.908[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists exam_result_question cascade 
Hibernate: 
    drop table if exists exam_result_question cascade 
[[2m2025-09-01 21:50:22.908[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists exam_sheet cascade 
Hibernate: 
    drop table if exists exam_sheet cascade 
[[2m2025-09-01 21:50:22.909[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists exam_sheet_question cascade 
Hibernate: 
    drop table if exists exam_sheet_question cascade 
[[2m2025-09-01 21:50:22.909[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists exam_sheet_selected_unit cascade 
Hibernate: 
    drop table if exists exam_sheet_selected_unit cascade 
[[2m2025-09-01 21:50:22.909[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists exam_submission cascade 
Hibernate: 
    drop table if exists exam_submission cascade 
[[2m2025-09-01 21:50:22.909[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists question cascade 
Hibernate: 
    drop table if exists question cascade 
[[2m2025-09-01 21:50:22.909[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists student cascade 
Hibernate: 
    drop table if exists student cascade 
[[2m2025-09-01 21:50:22.909[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists student_answer_sheet cascade 
Hibernate: 
    drop table if exists student_answer_sheet cascade 
[[2m2025-09-01 21:50:22.909[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists unit cascade 
Hibernate: 
    drop table if exists unit cascade 
[[2m2025-09-01 21:50:22.909[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists unit_category cascade 
Hibernate: 
    drop table if exists unit_category cascade 
[[2m2025-09-01 21:50:22.909[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists unit_subcategory cascade 
Hibernate: 
    drop table if exists unit_subcategory cascade 
[[2m2025-09-01 21:50:22.909[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists users cascade 
Hibernate: 
    drop table if exists users cascade 
[[2m2025-09-01 21:50:22.910[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    create table admin (
        id BINARY(16) not null,
        name varchar(50),
        username varchar(50) not null unique,
        academy_name varchar(100),
        email varchar(100),
        password varchar(255) not null,
        primary key (id)
    )
Hibernate: 
    create table admin (
        id BINARY(16) not null,
        name varchar(50),
        username varchar(50) not null unique,
        academy_name varchar(100),
        email varchar(100),
        password varchar(255) not null,
        primary key (id)
    )
[[2m2025-09-01 21:50:22.911[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    create table exam (
        grade integer not null,
        student_count integer not null,
        created_at timestamp(6) not null,
        exam_sheet_id BINARY(16) not null,
        id BINARY(16) not null,
        exam_name varchar(100) not null,
        content TEXT,
        qr_code_url LONGTEXT,
        primary key (id)
    )
Hibernate: 
    create table exam (
        grade integer not null,
        student_count integer not null,
        created_at timestamp(6) not null,
        exam_sheet_id BINARY(16) not null,
        id BINARY(16) not null,
        exam_name varchar(100) not null,
        content TEXT,
        qr_code_url LONGTEXT,
        primary key (id)
    )
[[2m2025-09-01 21:50:22.911[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    create table exam_document (
        exam_sheet_id BINARY(16) not null,
        id BINARY(16) not null,
        document_content LONGTEXT not null,
        qr_code_url LONGTEXT,
        document_type enum ('CORRECT_ANSWER_SHEET','EXAM_SHEET','STUDENT_ANSWER_SHEET') not null,
        primary key (id)
    )
Hibernate: 
    create table exam_document (
        exam_sheet_id BINARY(16) not null,
        id BINARY(16) not null,
        document_content LONGTEXT not null,
        qr_code_url LONGTEXT,
        document_type enum ('CORRECT_ANSWER_SHEET','EXAM_SHEET','STUDENT_ANSWER_SHEET') not null,
        primary key (id)
    )
[[2m2025-09-01 21:50:22.912[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    create table exam_result (
        total_score integer,
        version integer not null,
        created_at timestamp(6) not null,
        graded_at timestamp(6) not null,
        updated_at timestamp(6) not null,
        exam_sheet_id BINARY(16) not null,
        id BINARY(16) not null,
        submission_id BINARY(16) not null,
        grading_comment TEXT,
        status enum ('COMPLETED','IN_PROGRESS','PENDING','REGRADED') not null,
        primary key (id)
    )
Hibernate: 
    create table exam_result (
        total_score integer,
        version integer not null,
        created_at timestamp(6) not null,
        graded_at timestamp(6) not null,
        updated_at timestamp(6) not null,
        exam_sheet_id BINARY(16) not null,
        id BINARY(16) not null,
        submission_id BINARY(16) not null,
        grading_comment TEXT,
        status enum ('COMPLETED','IN_PROGRESS','PENDING','REGRADED') not null,
        primary key (id)
    )
[[2m2025-09-01 21:50:22.912[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    create table exam_result_question (
        confidence_score numeric(3,2),
        is_correct boolean,
        max_score integer not null,
        score integer,
        created_at timestamp(6) not null,
        updated_at timestamp(6) not null,
        answer_id BINARY(16) not null,
        exam_result_id BINARY(16) not null,
        id BINARY(16) not null,
        question_id BINARY(16) not null,
        grading_comment TEXT,
        grading_method enum ('AI_ASSISTED','AUTO','MANUAL') not null,
        primary key (id)
    )
Hibernate: 
    create table exam_result_question (
        confidence_score numeric(3,2),
        is_correct boolean,
        max_score integer not null,
        score integer,
        created_at timestamp(6) not null,
        updated_at timestamp(6) not null,
        answer_id BINARY(16) not null,
        exam_result_id BINARY(16) not null,
        id BINARY(16) not null,
        question_id BINARY(16) not null,
        grading_comment TEXT,
        grading_method enum ('AI_ASSISTED','AUTO','MANUAL') not null,
        primary key (id)
    )
[[2m2025-09-01 21:50:22.913[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    create table exam_sheet (
        grade integer not null,
        multiple_choice_count integer not null,
        subjective_count integer not null,
        total_questions integer not null,
        created_at timestamp(6) not null,
        updated_at timestamp(6) not null,
        id BINARY(16) not null,
        exam_name varchar(100) not null,
        primary key (id)
    )
Hibernate: 
    create table exam_sheet (
        grade integer not null,
        multiple_choice_count integer not null,
        subjective_count integer not null,
        total_questions integer not null,
        created_at timestamp(6) not null,
        updated_at timestamp(6) not null,
        id BINARY(16) not null,
        exam_name varchar(100) not null,
        primary key (id)
    )
[[2m2025-09-01 21:50:22.914[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    create table exam_sheet_question (
        points integer not null,
        seq_no integer not null,
        exam_sheet_id BINARY(16) not null,
        id BINARY(16) not null,
        question_id BINARY(16) not null,
        selection_method enum ('MANUAL','RANDOM') not null,
        primary key (id)
    )
Hibernate: 
    create table exam_sheet_question (
        points integer not null,
        seq_no integer not null,
        exam_sheet_id BINARY(16) not null,
        id BINARY(16) not null,
        question_id BINARY(16) not null,
        selection_method enum ('MANUAL','RANDOM') not null,
        primary key (id)
    )
[[2m2025-09-01 21:50:22.914[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    create table exam_sheet_selected_unit (
        exam_sheet_id BINARY(16) not null,
        id BINARY(16) not null,
        unit_id BINARY(16) not null,
        primary key (id)
    )
Hibernate: 
    create table exam_sheet_selected_unit (
        exam_sheet_id BINARY(16) not null,
        id BINARY(16) not null,
        unit_id BINARY(16) not null,
        primary key (id)
    )
[[2m2025-09-01 21:50:22.915[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    create table exam_submission (
        total_score integer,
        submitted_at timestamp(6) not null,
        exam_id BINARY(16) not null,
        id BINARY(16) not null,
        user_id BINARY(16) not null,
        primary key (id)
    )
Hibernate: 
    create table exam_submission (
        total_score integer,
        submitted_at timestamp(6) not null,
        exam_id BINARY(16) not null,
        id BINARY(16) not null,
        user_id BINARY(16) not null,
        primary key (id)
    )
[[2m2025-09-01 21:50:22.915[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    create table question (
        correct_choice integer,
        points integer,
        id BINARY(16) not null,
        unit_id BINARY(16) not null,
        answer_text LONGTEXT not null,
        choices JSON,
        image JSON,
        question_text TEXT not null,
        scoring_rubric TEXT,
        difficulty enum ('상','중','하') not null,
        question_type VARCHAR(20) DEFAULT 'SUBJECTIVE' not null,
        primary key (id)
    )
Hibernate: 
    create table question (
        correct_choice integer,
        points integer,
        id BINARY(16) not null,
        unit_id BINARY(16) not null,
        answer_text LONGTEXT not null,
        choices JSON,
        image JSON,
        question_text TEXT not null,
        scoring_rubric TEXT,
        difficulty enum ('상','중','하') not null,
        question_type VARCHAR(20) DEFAULT 'SUBJECTIVE' not null,
        primary key (id)
    )
[[2m2025-09-01 21:50:22.916[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    create table student (
        birth_date date not null,
        grade integer not null,
        id BINARY(16) not null,
        phone varchar(20),
        name varchar(50) not null,
        primary key (id)
    )
Hibernate: 
    create table student (
        birth_date date not null,
        grade integer not null,
        id BINARY(16) not null,
        phone varchar(20),
        name varchar(50) not null,
        primary key (id)
    )
[[2m2025-09-01 21:50:22.917[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    create table student_answer_sheet (
        is_correct boolean,
        score integer,
        selected_choice integer,
        id BINARY(16) not null,
        question_id BINARY(16) not null,
        submission_id BINARY(16) not null,
        answer_image_url varchar(500),
        answer_text varchar(1000),
        ai_solution_process TEXT,
        primary key (id)
    )
Hibernate: 
    create table student_answer_sheet (
        is_correct boolean,
        score integer,
        selected_choice integer,
        id BINARY(16) not null,
        question_id BINARY(16) not null,
        submission_id BINARY(16) not null,
        answer_image_url varchar(500),
        answer_text varchar(1000),
        ai_solution_process TEXT,
        primary key (id)
    )
[[2m2025-09-01 21:50:22.917[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    create table unit (
        display_order integer not null,
        grade integer not null,
        id BINARY(16) not null,
        subcategory_id BINARY(16) not null,
        unit_code varchar(30) not null unique,
        unit_name varchar(100) not null,
        description TEXT,
        primary key (id)
    )
Hibernate: 
    create table unit (
        display_order integer not null,
        grade integer not null,
        id BINARY(16) not null,
        subcategory_id BINARY(16) not null,
        unit_code varchar(30) not null unique,
        unit_name varchar(100) not null,
        description TEXT,
        primary key (id)
    )
[[2m2025-09-01 21:50:22.918[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    create table unit_category (
        display_order integer not null,
        id BINARY(16) not null,
        category_name varchar(50) not null,
        description varchar(200),
        primary key (id)
    )
Hibernate: 
    create table unit_category (
        display_order integer not null,
        id BINARY(16) not null,
        category_name varchar(50) not null,
        description varchar(200),
        primary key (id)
    )
[[2m2025-09-01 21:50:22.918[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    create table unit_subcategory (
        display_order integer not null,
        category_id BINARY(16) not null,
        id BINARY(16) not null,
        subcategory_name varchar(100) not null,
        description varchar(200),
        primary key (id)
    )
Hibernate: 
    create table unit_subcategory (
        display_order integer not null,
        category_id BINARY(16) not null,
        id BINARY(16) not null,
        subcategory_name varchar(100) not null,
        description varchar(200),
        primary key (id)
    )
[[2m2025-09-01 21:50:22.919[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    create table users (
        birth_date date,
        grade integer,
        created_at timestamp(6),
        updated_at timestamp(6),
        id BINARY(16) not null,
        phone varchar(20),
        name varchar(50) not null,
        username varchar(50) unique,
        academy_name varchar(100),
        email varchar(100),
        password varchar(255),
        role enum ('ADMIN','STUDENT') not null,
        primary key (id)
    )
Hibernate: 
    create table users (
        birth_date date,
        grade integer,
        created_at timestamp(6),
        updated_at timestamp(6),
        id BINARY(16) not null,
        phone varchar(20),
        name varchar(50) not null,
        username varchar(50) unique,
        academy_name varchar(100),
        email varchar(100),
        password varchar(255),
        role enum ('ADMIN','STUDENT') not null,
        primary key (id)
    )
[[2m2025-09-01 21:50:22.919[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    alter table if exists exam 
       add constraint FKslua7xmmjqpru9m6c0krepsbv 
       foreign key (exam_sheet_id) 
       references exam_sheet
Hibernate: 
    alter table if exists exam 
       add constraint FKslua7xmmjqpru9m6c0krepsbv 
       foreign key (exam_sheet_id) 
       references exam_sheet
[[2m2025-09-01 21:50:22.920[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    alter table if exists exam_document 
       add constraint FKnx1cqh8l78dxanvxg0bef7ga6 
       foreign key (exam_sheet_id) 
       references exam_sheet
Hibernate: 
    alter table if exists exam_document 
       add constraint FKnx1cqh8l78dxanvxg0bef7ga6 
       foreign key (exam_sheet_id) 
       references exam_sheet
[[2m2025-09-01 21:50:22.920[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    alter table if exists exam_result 
       add constraint FK1kxnkym7yfaed68mx1p9nujeb 
       foreign key (exam_sheet_id) 
       references exam_sheet
Hibernate: 
    alter table if exists exam_result 
       add constraint FK1kxnkym7yfaed68mx1p9nujeb 
       foreign key (exam_sheet_id) 
       references exam_sheet
[[2m2025-09-01 21:50:22.921[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    alter table if exists exam_result 
       add constraint FK5h2e7spb12bowlcpn9ni2iccg 
       foreign key (submission_id) 
       references exam_submission
Hibernate: 
    alter table if exists exam_result 
       add constraint FK5h2e7spb12bowlcpn9ni2iccg 
       foreign key (submission_id) 
       references exam_submission
[[2m2025-09-01 21:50:22.922[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    alter table if exists exam_result_question 
       add constraint FK5aqnya5vgl4c2nwvpv0ornhdu 
       foreign key (exam_result_id) 
       references exam_result
Hibernate: 
    alter table if exists exam_result_question 
       add constraint FK5aqnya5vgl4c2nwvpv0ornhdu 
       foreign key (exam_result_id) 
       references exam_result
[[2m2025-09-01 21:50:22.922[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    alter table if exists exam_result_question 
       add constraint FKsbejvkmejga9gx8m6hdidiox5 
       foreign key (question_id) 
       references question
Hibernate: 
    alter table if exists exam_result_question 
       add constraint FKsbejvkmejga9gx8m6hdidiox5 
       foreign key (question_id) 
       references question
[[2m2025-09-01 21:50:22.923[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    alter table if exists exam_result_question 
       add constraint FKo6t3vrkoarst5p5wfnssw7ask 
       foreign key (answer_id) 
       references student_answer_sheet
Hibernate: 
    alter table if exists exam_result_question 
       add constraint FKo6t3vrkoarst5p5wfnssw7ask 
       foreign key (answer_id) 
       references student_answer_sheet
[[2m2025-09-01 21:50:22.923[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    alter table if exists exam_sheet_question 
       add constraint FKhhbpusdcfj01oogq0c4s3dfit 
       foreign key (exam_sheet_id) 
       references exam_sheet
Hibernate: 
    alter table if exists exam_sheet_question 
       add constraint FKhhbpusdcfj01oogq0c4s3dfit 
       foreign key (exam_sheet_id) 
       references exam_sheet
[[2m2025-09-01 21:50:22.924[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    alter table if exists exam_sheet_question 
       add constraint FKrd319pw6ublwiqxr5ojji75o4 
       foreign key (question_id) 
       references question
Hibernate: 
    alter table if exists exam_sheet_question 
       add constraint FKrd319pw6ublwiqxr5ojji75o4 
       foreign key (question_id) 
       references question
[[2m2025-09-01 21:50:22.924[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    alter table if exists exam_sheet_selected_unit 
       add constraint FK2xbjk8ujtgcok7pm4ddrmn0ak 
       foreign key (exam_sheet_id) 
       references exam_sheet
Hibernate: 
    alter table if exists exam_sheet_selected_unit 
       add constraint FK2xbjk8ujtgcok7pm4ddrmn0ak 
       foreign key (exam_sheet_id) 
       references exam_sheet
[[2m2025-09-01 21:50:22.925[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    alter table if exists exam_sheet_selected_unit 
       add constraint FK42oxhmr6y5rnn12m7gf4cqcwf 
       foreign key (unit_id) 
       references unit
Hibernate: 
    alter table if exists exam_sheet_selected_unit 
       add constraint FK42oxhmr6y5rnn12m7gf4cqcwf 
       foreign key (unit_id) 
       references unit
[[2m2025-09-01 21:50:22.925[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    alter table if exists exam_submission 
       add constraint FKhpbxc166py57lqe75pkrbw4b5 
       foreign key (exam_id) 
       references exam
Hibernate: 
    alter table if exists exam_submission 
       add constraint FKhpbxc166py57lqe75pkrbw4b5 
       foreign key (exam_id) 
       references exam
[[2m2025-09-01 21:50:22.926[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    alter table if exists exam_submission 
       add constraint FK7skcbvnd69xvhvg5vrs5o028n 
       foreign key (user_id) 
       references users
Hibernate: 
    alter table if exists exam_submission 
       add constraint FK7skcbvnd69xvhvg5vrs5o028n 
       foreign key (user_id) 
       references users
[[2m2025-09-01 21:50:22.926[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    alter table if exists question 
       add constraint FKs1tl5ukggla0y9dkixxfimpwx 
       foreign key (unit_id) 
       references unit
Hibernate: 
    alter table if exists question 
       add constraint FKs1tl5ukggla0y9dkixxfimpwx 
       foreign key (unit_id) 
       references unit
[[2m2025-09-01 21:50:22.927[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    alter table if exists student_answer_sheet 
       add constraint FK63r296id7mv5ydnla6anonx3b 
       foreign key (submission_id) 
       references exam_submission
Hibernate: 
    alter table if exists student_answer_sheet 
       add constraint FK63r296id7mv5ydnla6anonx3b 
       foreign key (submission_id) 
       references exam_submission
[[2m2025-09-01 21:50:22.927[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    alter table if exists student_answer_sheet 
       add constraint FKqow3301uxhfpcrfp3fdheyrt0 
       foreign key (question_id) 
       references question
Hibernate: 
    alter table if exists student_answer_sheet 
       add constraint FKqow3301uxhfpcrfp3fdheyrt0 
       foreign key (question_id) 
       references question
[[2m2025-09-01 21:50:22.928[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    alter table if exists unit 
       add constraint FKjkc14skpio53pwkriddt28c27 
       foreign key (subcategory_id) 
       references unit_subcategory
Hibernate: 
    alter table if exists unit 
       add constraint FKjkc14skpio53pwkriddt28c27 
       foreign key (subcategory_id) 
       references unit_subcategory
[[2m2025-09-01 21:50:22.928[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    alter table if exists unit_subcategory 
       add constraint FKjjsoskeu940jdm1ahqgg7tmhn 
       foreign key (category_id) 
       references unit_category
Hibernate: 
    alter table if exists unit_subcategory 
       add constraint FKjjsoskeu940jdm1ahqgg7tmhn 
       foreign key (category_id) 
       references unit_category
[[2m2025-09-01 21:50:22.929[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mj.LocalContainerEntityManagerFactoryBean[0;39m [2m:[0;39m Initialized JPA EntityManagerFactory for persistence unit 'default'
[[2m2025-09-01 21:50:23.055[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mc.i.springbackend.config.AiServerConfig [0;39m [2m:[0;39m AI 서버 WebClient 설정 시작: baseUrl=http://localhost:8000, connectTimeout=30초, responseTimeout=60초
[[2m2025-09-01 21:50:23.056[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mc.i.springbackend.config.AiServerConfig [0;39m [2m:[0;39m AI 서버 WebClient 설정 완료
[[2m2025-09-01 21:50:23.142[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mc.i.springbackend.config.S3Config       [0;39m [2m:[0;39m S3 클라이언트 생성 시작: region=ap-northeast-2, bucketName=
[[2m2025-09-01 21:50:23.145[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mc.i.springbackend.config.S3Config       [0;39m [2m:[0;39m S3 클라이언트 생성 완료
[[2m2025-09-01 21:50:23.150[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mc.i.springbackend.config.S3Config       [0;39m [2m:[0;39m S3 프리사인드 URL 생성기 생성 시작: region=ap-northeast-2, urlDuration=60분
[[2m2025-09-01 21:50:23.151[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mc.i.springbackend.config.S3Config       [0;39m [2m:[0;39m S3 프리사인드 URL 생성기 생성 완료
[[2m2025-09-01 21:50:23.198[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mc.i.springbackend.config.S3Config       [0;39m [2m:[0;39m S3 비동기 클라이언트 생성 시작: region=ap-northeast-2
[[2m2025-09-01 21:50:23.200[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mc.i.springbackend.config.S3Config       [0;39m [2m:[0;39m S3 비동기 클라이언트 생성 완료
[[2m2025-09-01 21:50:23.205[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mc.i.springbackend.config.S3Config       [0;39m [2m:[0;39m S3 Transfer Manager 생성 시작: minPartSize=8MB
[[2m2025-09-01 21:50:23.205[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mc.i.springbackend.config.S3Config       [0;39m [2m:[0;39m S3 Transfer Manager 생성 완료
[[2m2025-09-01 21:50:23.261[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mr$InitializeUserDetailsManagerConfigurer[0;39m [2m:[0;39m Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService
[[2m2025-09-01 21:50:23.295[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.s.web.DefaultSecurityFilterChain    [0;39m [2m:[0;39m Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
[[2m2025-09-01 21:50:23.351[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.b.a.h2.H2ConsoleAutoConfiguration   [0;39m [2m:[0;39m H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
[[2m2025-09-01 21:50:23.364[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.b.d.a.OptionalLiveReloadServer      [0;39m [2m:[0;39m LiveReload server is running on port 35729
[[2m2025-09-01 21:50:23.373[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.coyote.http11.Http11NioProtocol     [0;39m [2m:[0;39m Starting ProtocolHandler ["http-nio-3055"]
[[2m2025-09-01 21:50:23.375[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.b.w.embedded.tomcat.TomcatWebServer [0;39m [2m:[0;39m Tomcat started on port 3055 (http) with context path '/api'
[[2m2025-09-01 21:50:23.377[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mc.i.s.SpringBackendApplication          [0;39m [2m:[0;39m Started SpringBackendApplication in 1.023 seconds (process running for 1289.544)
[[2m2025-09-01 21:50:23.379[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    /* <criteria> */ select
        u1_0.id,
        u1_0.academy_name,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.grade,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    /* <criteria> */ select
        u1_0.id,
        u1_0.academy_name,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.grade,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
[[2m2025-09-01 21:50:23.442[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mc.i.s.config.TestDataInitializer        [0;39m [2m:[0;39m 테스트 관리자 계정 생성 완료: username=admin, id=01990554-2052-7033-9c28-ef4eb88646da
[[2m2025-09-01 21:50:23.442[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mc.i.s.config.TestDataInitializer        [0;39m [2m:[0;39m 테스트 로그인 정보 - 사용자명: admin, 비밀번호: password
[[2m2025-09-01 21:50:23.443[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    /* insert for
        com.iroomclass.springbackend.domain.user.entity.User */insert 
    into
        users (academy_name, birth_date, created_at, email, grade, name, password, phone, role, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    /* insert for
        com.iroomclass.springbackend.domain.user.entity.User */insert 
    into
        users (academy_name, birth_date, created_at, email, grade, name, password, phone, role, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[[2m2025-09-01 21:50:23.444[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.ConditionEvaluationDeltaLoggingListener[0;39m [2m:[0;39m Condition evaluation unchanged
[[2m2025-09-01 21:50:27.794[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[   File Watcher][0;39m [36mrtingClassPathChangeChangedEventListener[0;39m [2m:[0;39m Restarting due to 13 class path changes (0 additions, 0 deletions, 13 modifications)
[[2m2025-09-01 21:50:27.796[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[      Thread-22][0;39m [36mo.s.b.w.e.tomcat.GracefulShutdown       [0;39m [2m:[0;39m Commencing graceful shutdown. Waiting for active requests to complete
[[2m2025-09-01 21:50:27.797[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[tomcat-shutdown][0;39m [36mo.a.coyote.http11.Http11NioProtocol     [0;39m [2m:[0;39m Pausing ProtocolHandler ["http-nio-3055"]
[[2m2025-09-01 21:50:27.797[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[tomcat-shutdown][0;39m [36mo.s.b.w.e.tomcat.GracefulShutdown       [0;39m [2m:[0;39m Graceful shutdown complete
[[2m2025-09-01 21:50:27.797[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[      Thread-22][0;39m [36mo.a.coyote.http11.Http11NioProtocol     [0;39m [2m:[0;39m Stopping ProtocolHandler ["http-nio-3055"]
[[2m2025-09-01 21:50:29.813[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[      Thread-22][0;39m [36mj.LocalContainerEntityManagerFactoryBean[0;39m [2m:[0;39m Closing JPA EntityManagerFactory for persistence unit 'default'
[[2m2025-09-01 21:50:29.813[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[      Thread-22][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists admin cascade 
Hibernate: 
    drop table if exists admin cascade 
[[2m2025-09-01 21:50:29.813[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[      Thread-22][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists exam cascade 
Hibernate: 
    drop table if exists exam cascade 
[[2m2025-09-01 21:50:29.814[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[      Thread-22][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists exam_document cascade 
Hibernate: 
    drop table if exists exam_document cascade 
[[2m2025-09-01 21:50:29.814[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[      Thread-22][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists exam_result cascade 
Hibernate: 
    drop table if exists exam_result cascade 
[[2m2025-09-01 21:50:29.814[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[      Thread-22][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists exam_result_question cascade 
Hibernate: 
    drop table if exists exam_result_question cascade 
[[2m2025-09-01 21:50:29.814[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[      Thread-22][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists exam_sheet cascade 
Hibernate: 
    drop table if exists exam_sheet cascade 
[[2m2025-09-01 21:50:29.815[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[      Thread-22][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists exam_sheet_question cascade 
Hibernate: 
    drop table if exists exam_sheet_question cascade 
[[2m2025-09-01 21:50:29.815[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[      Thread-22][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists exam_sheet_selected_unit cascade 
Hibernate: 
    drop table if exists exam_sheet_selected_unit cascade 
[[2m2025-09-01 21:50:29.815[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[      Thread-22][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists exam_submission cascade 
Hibernate: 
    drop table if exists exam_submission cascade 
[[2m2025-09-01 21:50:29.815[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[      Thread-22][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists question cascade 
Hibernate: 
    drop table if exists question cascade 
[[2m2025-09-01 21:50:29.815[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[      Thread-22][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists student cascade 
Hibernate: 
    drop table if exists student cascade 
[[2m2025-09-01 21:50:29.816[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[      Thread-22][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists student_answer_sheet cascade 
Hibernate: 
    drop table if exists student_answer_sheet cascade 
[[2m2025-09-01 21:50:29.816[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[      Thread-22][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists unit cascade 
Hibernate: 
    drop table if exists unit cascade 
[[2m2025-09-01 21:50:29.816[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[      Thread-22][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists unit_category cascade 
Hibernate: 
    drop table if exists unit_category cascade 
[[2m2025-09-01 21:50:29.816[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[      Thread-22][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists unit_subcategory cascade 
Hibernate: 
    drop table if exists unit_subcategory cascade 
[[2m2025-09-01 21:50:29.816[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[      Thread-22][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists users cascade 
Hibernate: 
    drop table if exists users cascade 
[[2m2025-09-01 21:50:29.817[0;39m] [33m WARN[0;39m [35m3096282[0;39m [2m---[0;39m [2m[      Thread-22][0;39m [36mo.s.b.f.support.DisposableBeanAdapter   [0;39m [2m:[0;39m Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-232]
[[2m2025-09-01 21:50:29.817[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[      Thread-22][0;39m [36mcom.zaxxer.hikari.HikariDataSource      [0;39m [2m:[0;39m HikariPool-4 - Shutdown initiated...
[[2m2025-09-01 21:50:29.818[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[      Thread-22][0;39m [36mcom.zaxxer.hikari.HikariDataSource      [0;39m [2m:[0;39m HikariPool-4 - Shutdown completed.
Standard Commons Logging discovery in action with spring-jcl: please remove commons-logging.jar from classpath in order to avoid potential conflicts
21:50:29,908 |-WARN in ch.qos.logback.core.joran.action.ConversionRuleAction - [converterClass] attribute is deprecated and replaced by [class]. See element [conversionRule] near line 11
21:50:29,908 |-WARN in ch.qos.logback.core.joran.action.ConversionRuleAction - [converterClass] attribute is deprecated and replaced by [class]. See element [conversionRule] near line 13
21:50:29,908 |-WARN in ch.qos.logback.core.joran.action.ConversionRuleAction - [converterClass] attribute is deprecated and replaced by [class]. See element [conversionRule] near line 15

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/

[32m :: Spring Boot :: [39m              [2m (v3.5.4)[0;39m

[[2m2025-09-01 21:50:29.924[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mc.i.s.SpringBackendApplication          [0;39m [2m:[0;39m Starting SpringBackendApplication using Java 21.0.8 with PID 3096282 (/home/aiden/programming/final-project/iroom-backend-springboot/build/classes/java/main started by aiden in /home/aiden/programming/final-project/iroom-backend-springboot)
[[2m2025-09-01 21:50:29.925[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mc.i.s.SpringBackendApplication          [0;39m [2m:[0;39m Running with Spring Boot v3.5.4, Spring v6.2.9
[[2m2025-09-01 21:50:29.925[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mc.i.s.SpringBackendApplication          [0;39m [2m:[0;39m The following 1 profile is active: "test-local"
[[2m2025-09-01 21:50:30.097[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.s.d.r.c.RepositoryConfigurationDelegate[0;39m [2m:[0;39m Multiple Spring Data modules found, entering strict repository configuration mode
[[2m2025-09-01 21:50:30.097[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.s.d.r.c.RepositoryConfigurationDelegate[0;39m [2m:[0;39m Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[[2m2025-09-01 21:50:30.121[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.s.d.r.c.RepositoryConfigurationDelegate[0;39m [2m:[0;39m Finished Spring Data repository scanning in 23 ms. Found 16 JPA repository interfaces.
[[2m2025-09-01 21:50:30.124[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.s.d.r.c.RepositoryConfigurationDelegate[0;39m [2m:[0;39m Multiple Spring Data modules found, entering strict repository configuration mode
[[2m2025-09-01 21:50:30.124[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.s.d.r.c.RepositoryConfigurationDelegate[0;39m [2m:[0;39m Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[[2m2025-09-01 21:50:30.129[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.RepositoryConfigurationExtensionSupport[0;39m [2m:[0;39m Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.iroomclass.springbackend.domain.curriculum.repository.UnitCategoryRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[[2m2025-09-01 21:50:30.129[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.RepositoryConfigurationExtensionSupport[0;39m [2m:[0;39m Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.iroomclass.springbackend.domain.curriculum.repository.UnitRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[[2m2025-09-01 21:50:30.129[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.RepositoryConfigurationExtensionSupport[0;39m [2m:[0;39m Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.iroomclass.springbackend.domain.curriculum.repository.UnitSubcategoryRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[[2m2025-09-01 21:50:30.129[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.RepositoryConfigurationExtensionSupport[0;39m [2m:[0;39m Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.iroomclass.springbackend.domain.exam.repository.ExamDocumentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[[2m2025-09-01 21:50:30.129[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.RepositoryConfigurationExtensionSupport[0;39m [2m:[0;39m Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.iroomclass.springbackend.domain.exam.repository.ExamRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[[2m2025-09-01 21:50:30.129[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.RepositoryConfigurationExtensionSupport[0;39m [2m:[0;39m Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.iroomclass.springbackend.domain.exam.repository.ExamResultRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[[2m2025-09-01 21:50:30.129[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.RepositoryConfigurationExtensionSupport[0;39m [2m:[0;39m Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.iroomclass.springbackend.domain.exam.repository.ExamSheetQuestionRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[[2m2025-09-01 21:50:30.130[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.RepositoryConfigurationExtensionSupport[0;39m [2m:[0;39m Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.iroomclass.springbackend.domain.exam.repository.ExamSheetRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[[2m2025-09-01 21:50:30.130[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.RepositoryConfigurationExtensionSupport[0;39m [2m:[0;39m Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.iroomclass.springbackend.domain.exam.repository.ExamSheetSelectedUnitRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[[2m2025-09-01 21:50:30.130[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.RepositoryConfigurationExtensionSupport[0;39m [2m:[0;39m Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.iroomclass.springbackend.domain.exam.repository.ExamSubmissionRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[[2m2025-09-01 21:50:30.130[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.RepositoryConfigurationExtensionSupport[0;39m [2m:[0;39m Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.iroomclass.springbackend.domain.exam.repository.QuestionRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[[2m2025-09-01 21:50:30.130[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.RepositoryConfigurationExtensionSupport[0;39m [2m:[0;39m Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.iroomclass.springbackend.domain.exam.repository.QuestionResultRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[[2m2025-09-01 21:50:30.130[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.RepositoryConfigurationExtensionSupport[0;39m [2m:[0;39m Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.iroomclass.springbackend.domain.exam.repository.StudentAnswerSheetRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[[2m2025-09-01 21:50:30.130[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.RepositoryConfigurationExtensionSupport[0;39m [2m:[0;39m Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.iroomclass.springbackend.domain.user.repository.StudentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[[2m2025-09-01 21:50:30.130[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.RepositoryConfigurationExtensionSupport[0;39m [2m:[0;39m Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.iroomclass.springbackend.domain.user.repository.TeacherRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[[2m2025-09-01 21:50:30.130[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.RepositoryConfigurationExtensionSupport[0;39m [2m:[0;39m Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.iroomclass.springbackend.domain.user.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[[2m2025-09-01 21:50:30.130[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.s.d.r.c.RepositoryConfigurationDelegate[0;39m [2m:[0;39m Finished Spring Data repository scanning in 5 ms. Found 0 Redis repository interfaces.
[[2m2025-09-01 21:50:30.208[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.b.w.embedded.tomcat.TomcatWebServer [0;39m [2m:[0;39m Tomcat initialized with port 3055 (http)
[[2m2025-09-01 21:50:30.209[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.coyote.http11.Http11NioProtocol     [0;39m [2m:[0;39m Initializing ProtocolHandler ["http-nio-3055"]
[[2m2025-09-01 21:50:30.209[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.apache.catalina.core.StandardService  [0;39m [2m:[0;39m Starting service [Tomcat]
[[2m2025-09-01 21:50:30.209[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.apache.catalina.core.StandardEngine   [0;39m [2m:[0;39m Starting Servlet engine: [Apache Tomcat/10.1.43]
[[2m2025-09-01 21:50:30.216[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.c.c.C.[Tomcat].[localhost].[/api]   [0;39m [2m:[0;39m Initializing Spring embedded WebApplicationContext
[[2m2025-09-01 21:50:30.216[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mw.s.c.ServletWebServerApplicationContext[0;39m [2m:[0;39m Root WebApplicationContext: initialization completed in 290 ms
Standard Commons Logging discovery in action with spring-jcl: please remove commons-logging.jar from classpath in order to avoid potential conflicts
[[2m2025-09-01 21:50:30.225[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mc.i.s.config.JwtAuthenticationFilter    [0;39m [2m:[0;39m Filter 'jwtAuthenticationFilter' configured for use
[[2m2025-09-01 21:50:30.246[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.hibernate.jpa.internal.util.LogHelper [0;39m [2m:[0;39m HHH000204: Processing PersistenceUnitInfo [name: default]
[[2m2025-09-01 21:50:30.248[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.h.c.internal.RegionFactoryInitiator   [0;39m [2m:[0;39m HHH000026: Second-level cache disabled
[[2m2025-09-01 21:50:30.253[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.o.j.p.SpringPersistenceUnitInfo     [0;39m [2m:[0;39m No LoadTimeWeaver setup: ignoring JPA class transformer
[[2m2025-09-01 21:50:30.253[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mcom.zaxxer.hikari.HikariDataSource      [0;39m [2m:[0;39m HikariPool-5 - Starting...
[[2m2025-09-01 21:50:30.255[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mcom.zaxxer.hikari.pool.HikariPool       [0;39m [2m:[0;39m HikariPool-5 - Added connection conn40: url=jdbc:h2:mem:testdb user=SA
[[2m2025-09-01 21:50:30.255[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mcom.zaxxer.hikari.HikariDataSource      [0;39m [2m:[0;39m HikariPool-5 - Start completed.
[[2m2025-09-01 21:50:30.255[0;39m] [33m WARN[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.orm.deprecation           [0;39m [2m:[0;39m HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
[[2m2025-09-01 21:50:30.256[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.orm.connections.pooling   [0;39m [2m:[0;39m HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-5)']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
[[2m2025-09-01 21:50:30.387[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.h.e.t.j.p.i.JtaPlatformInitiator      [0;39m [2m:[0;39m HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
[[2m2025-09-01 21:50:30.388[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists admin cascade 
Hibernate: 
    drop table if exists admin cascade 
[[2m2025-09-01 21:50:30.388[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists exam cascade 
Hibernate: 
    drop table if exists exam cascade 
[[2m2025-09-01 21:50:30.388[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists exam_document cascade 
Hibernate: 
    drop table if exists exam_document cascade 
[[2m2025-09-01 21:50:30.388[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists exam_result cascade 
Hibernate: 
    drop table if exists exam_result cascade 
[[2m2025-09-01 21:50:30.388[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists exam_result_question cascade 
Hibernate: 
    drop table if exists exam_result_question cascade 
[[2m2025-09-01 21:50:30.389[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists exam_sheet cascade 
Hibernate: 
    drop table if exists exam_sheet cascade 
[[2m2025-09-01 21:50:30.389[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists exam_sheet_question cascade 
Hibernate: 
    drop table if exists exam_sheet_question cascade 
[[2m2025-09-01 21:50:30.389[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists exam_sheet_selected_unit cascade 
Hibernate: 
    drop table if exists exam_sheet_selected_unit cascade 
[[2m2025-09-01 21:50:30.389[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists exam_submission cascade 
Hibernate: 
    drop table if exists exam_submission cascade 
[[2m2025-09-01 21:50:30.389[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists question cascade 
Hibernate: 
    drop table if exists question cascade 
[[2m2025-09-01 21:50:30.389[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists student cascade 
Hibernate: 
    drop table if exists student cascade 
[[2m2025-09-01 21:50:30.389[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists student_answer_sheet cascade 
Hibernate: 
    drop table if exists student_answer_sheet cascade 
[[2m2025-09-01 21:50:30.389[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists unit cascade 
Hibernate: 
    drop table if exists unit cascade 
[[2m2025-09-01 21:50:30.389[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists unit_category cascade 
Hibernate: 
    drop table if exists unit_category cascade 
[[2m2025-09-01 21:50:30.389[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists unit_subcategory cascade 
Hibernate: 
    drop table if exists unit_subcategory cascade 
[[2m2025-09-01 21:50:30.389[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists users cascade 
Hibernate: 
    drop table if exists users cascade 
[[2m2025-09-01 21:50:30.390[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    create table admin (
        id BINARY(16) not null,
        name varchar(50),
        username varchar(50) not null unique,
        academy_name varchar(100),
        email varchar(100),
        password varchar(255) not null,
        primary key (id)
    )
Hibernate: 
    create table admin (
        id BINARY(16) not null,
        name varchar(50),
        username varchar(50) not null unique,
        academy_name varchar(100),
        email varchar(100),
        password varchar(255) not null,
        primary key (id)
    )
[[2m2025-09-01 21:50:30.391[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    create table exam (
        grade integer not null,
        student_count integer not null,
        created_at timestamp(6) not null,
        exam_sheet_id BINARY(16) not null,
        id BINARY(16) not null,
        exam_name varchar(100) not null,
        content TEXT,
        qr_code_url LONGTEXT,
        primary key (id)
    )
Hibernate: 
    create table exam (
        grade integer not null,
        student_count integer not null,
        created_at timestamp(6) not null,
        exam_sheet_id BINARY(16) not null,
        id BINARY(16) not null,
        exam_name varchar(100) not null,
        content TEXT,
        qr_code_url LONGTEXT,
        primary key (id)
    )
[[2m2025-09-01 21:50:30.391[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    create table exam_document (
        exam_sheet_id BINARY(16) not null,
        id BINARY(16) not null,
        document_content LONGTEXT not null,
        qr_code_url LONGTEXT,
        document_type enum ('CORRECT_ANSWER_SHEET','EXAM_SHEET','STUDENT_ANSWER_SHEET') not null,
        primary key (id)
    )
Hibernate: 
    create table exam_document (
        exam_sheet_id BINARY(16) not null,
        id BINARY(16) not null,
        document_content LONGTEXT not null,
        qr_code_url LONGTEXT,
        document_type enum ('CORRECT_ANSWER_SHEET','EXAM_SHEET','STUDENT_ANSWER_SHEET') not null,
        primary key (id)
    )
[[2m2025-09-01 21:50:30.392[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    create table exam_result (
        total_score integer,
        version integer not null,
        created_at timestamp(6) not null,
        graded_at timestamp(6) not null,
        updated_at timestamp(6) not null,
        exam_sheet_id BINARY(16) not null,
        id BINARY(16) not null,
        submission_id BINARY(16) not null,
        grading_comment TEXT,
        status enum ('COMPLETED','IN_PROGRESS','PENDING','REGRADED') not null,
        primary key (id)
    )
Hibernate: 
    create table exam_result (
        total_score integer,
        version integer not null,
        created_at timestamp(6) not null,
        graded_at timestamp(6) not null,
        updated_at timestamp(6) not null,
        exam_sheet_id BINARY(16) not null,
        id BINARY(16) not null,
        submission_id BINARY(16) not null,
        grading_comment TEXT,
        status enum ('COMPLETED','IN_PROGRESS','PENDING','REGRADED') not null,
        primary key (id)
    )
[[2m2025-09-01 21:50:30.393[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    create table exam_result_question (
        confidence_score numeric(3,2),
        is_correct boolean,
        max_score integer not null,
        score integer,
        created_at timestamp(6) not null,
        updated_at timestamp(6) not null,
        answer_id BINARY(16) not null,
        exam_result_id BINARY(16) not null,
        id BINARY(16) not null,
        question_id BINARY(16) not null,
        grading_comment TEXT,
        grading_method enum ('AI_ASSISTED','AUTO','MANUAL') not null,
        primary key (id)
    )
Hibernate: 
    create table exam_result_question (
        confidence_score numeric(3,2),
        is_correct boolean,
        max_score integer not null,
        score integer,
        created_at timestamp(6) not null,
        updated_at timestamp(6) not null,
        answer_id BINARY(16) not null,
        exam_result_id BINARY(16) not null,
        id BINARY(16) not null,
        question_id BINARY(16) not null,
        grading_comment TEXT,
        grading_method enum ('AI_ASSISTED','AUTO','MANUAL') not null,
        primary key (id)
    )
[[2m2025-09-01 21:50:30.393[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    create table exam_sheet (
        grade integer not null,
        multiple_choice_count integer not null,
        subjective_count integer not null,
        total_questions integer not null,
        created_at timestamp(6) not null,
        updated_at timestamp(6) not null,
        id BINARY(16) not null,
        exam_name varchar(100) not null,
        primary key (id)
    )
Hibernate: 
    create table exam_sheet (
        grade integer not null,
        multiple_choice_count integer not null,
        subjective_count integer not null,
        total_questions integer not null,
        created_at timestamp(6) not null,
        updated_at timestamp(6) not null,
        id BINARY(16) not null,
        exam_name varchar(100) not null,
        primary key (id)
    )
[[2m2025-09-01 21:50:30.393[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    create table exam_sheet_question (
        points integer not null,
        seq_no integer not null,
        exam_sheet_id BINARY(16) not null,
        id BINARY(16) not null,
        question_id BINARY(16) not null,
        selection_method enum ('MANUAL','RANDOM') not null,
        primary key (id)
    )
Hibernate: 
    create table exam_sheet_question (
        points integer not null,
        seq_no integer not null,
        exam_sheet_id BINARY(16) not null,
        id BINARY(16) not null,
        question_id BINARY(16) not null,
        selection_method enum ('MANUAL','RANDOM') not null,
        primary key (id)
    )
[[2m2025-09-01 21:50:30.394[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    create table exam_sheet_selected_unit (
        exam_sheet_id BINARY(16) not null,
        id BINARY(16) not null,
        unit_id BINARY(16) not null,
        primary key (id)
    )
Hibernate: 
    create table exam_sheet_selected_unit (
        exam_sheet_id BINARY(16) not null,
        id BINARY(16) not null,
        unit_id BINARY(16) not null,
        primary key (id)
    )
[[2m2025-09-01 21:50:30.394[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    create table exam_submission (
        total_score integer,
        submitted_at timestamp(6) not null,
        exam_id BINARY(16) not null,
        id BINARY(16) not null,
        user_id BINARY(16) not null,
        primary key (id)
    )
Hibernate: 
    create table exam_submission (
        total_score integer,
        submitted_at timestamp(6) not null,
        exam_id BINARY(16) not null,
        id BINARY(16) not null,
        user_id BINARY(16) not null,
        primary key (id)
    )
[[2m2025-09-01 21:50:30.394[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    create table question (
        correct_choice integer,
        points integer,
        id BINARY(16) not null,
        unit_id BINARY(16) not null,
        answer_text LONGTEXT not null,
        choices JSON,
        image JSON,
        question_text TEXT not null,
        scoring_rubric TEXT,
        difficulty enum ('상','중','하') not null,
        question_type VARCHAR(20) DEFAULT 'SUBJECTIVE' not null,
        primary key (id)
    )
Hibernate: 
    create table question (
        correct_choice integer,
        points integer,
        id BINARY(16) not null,
        unit_id BINARY(16) not null,
        answer_text LONGTEXT not null,
        choices JSON,
        image JSON,
        question_text TEXT not null,
        scoring_rubric TEXT,
        difficulty enum ('상','중','하') not null,
        question_type VARCHAR(20) DEFAULT 'SUBJECTIVE' not null,
        primary key (id)
    )
[[2m2025-09-01 21:50:30.395[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    create table student (
        birth_date date not null,
        grade integer not null,
        id BINARY(16) not null,
        phone varchar(20),
        name varchar(50) not null,
        primary key (id)
    )
Hibernate: 
    create table student (
        birth_date date not null,
        grade integer not null,
        id BINARY(16) not null,
        phone varchar(20),
        name varchar(50) not null,
        primary key (id)
    )
[[2m2025-09-01 21:50:30.395[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    create table student_answer_sheet (
        is_correct boolean,
        score integer,
        selected_choice integer,
        id BINARY(16) not null,
        question_id BINARY(16) not null,
        submission_id BINARY(16) not null,
        answer_image_url varchar(500),
        answer_text varchar(1000),
        ai_solution_process TEXT,
        primary key (id)
    )
Hibernate: 
    create table student_answer_sheet (
        is_correct boolean,
        score integer,
        selected_choice integer,
        id BINARY(16) not null,
        question_id BINARY(16) not null,
        submission_id BINARY(16) not null,
        answer_image_url varchar(500),
        answer_text varchar(1000),
        ai_solution_process TEXT,
        primary key (id)
    )
[[2m2025-09-01 21:50:30.396[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    create table unit (
        display_order integer not null,
        grade integer not null,
        id BINARY(16) not null,
        subcategory_id BINARY(16) not null,
        unit_code varchar(30) not null unique,
        unit_name varchar(100) not null,
        description TEXT,
        primary key (id)
    )
Hibernate: 
    create table unit (
        display_order integer not null,
        grade integer not null,
        id BINARY(16) not null,
        subcategory_id BINARY(16) not null,
        unit_code varchar(30) not null unique,
        unit_name varchar(100) not null,
        description TEXT,
        primary key (id)
    )
[[2m2025-09-01 21:50:30.396[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    create table unit_category (
        display_order integer not null,
        id BINARY(16) not null,
        category_name varchar(50) not null,
        description varchar(200),
        primary key (id)
    )
Hibernate: 
    create table unit_category (
        display_order integer not null,
        id BINARY(16) not null,
        category_name varchar(50) not null,
        description varchar(200),
        primary key (id)
    )
[[2m2025-09-01 21:50:30.396[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    create table unit_subcategory (
        display_order integer not null,
        category_id BINARY(16) not null,
        id BINARY(16) not null,
        subcategory_name varchar(100) not null,
        description varchar(200),
        primary key (id)
    )
Hibernate: 
    create table unit_subcategory (
        display_order integer not null,
        category_id BINARY(16) not null,
        id BINARY(16) not null,
        subcategory_name varchar(100) not null,
        description varchar(200),
        primary key (id)
    )
[[2m2025-09-01 21:50:30.397[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    create table users (
        birth_date date,
        grade integer,
        created_at timestamp(6),
        updated_at timestamp(6),
        id BINARY(16) not null,
        phone varchar(20),
        name varchar(50) not null,
        username varchar(50) unique,
        academy_name varchar(100),
        email varchar(100),
        password varchar(255),
        role enum ('ADMIN','STUDENT') not null,
        primary key (id)
    )
Hibernate: 
    create table users (
        birth_date date,
        grade integer,
        created_at timestamp(6),
        updated_at timestamp(6),
        id BINARY(16) not null,
        phone varchar(20),
        name varchar(50) not null,
        username varchar(50) unique,
        academy_name varchar(100),
        email varchar(100),
        password varchar(255),
        role enum ('ADMIN','STUDENT') not null,
        primary key (id)
    )
[[2m2025-09-01 21:50:30.397[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    alter table if exists exam 
       add constraint FKslua7xmmjqpru9m6c0krepsbv 
       foreign key (exam_sheet_id) 
       references exam_sheet
Hibernate: 
    alter table if exists exam 
       add constraint FKslua7xmmjqpru9m6c0krepsbv 
       foreign key (exam_sheet_id) 
       references exam_sheet
[[2m2025-09-01 21:50:30.398[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    alter table if exists exam_document 
       add constraint FKnx1cqh8l78dxanvxg0bef7ga6 
       foreign key (exam_sheet_id) 
       references exam_sheet
Hibernate: 
    alter table if exists exam_document 
       add constraint FKnx1cqh8l78dxanvxg0bef7ga6 
       foreign key (exam_sheet_id) 
       references exam_sheet
[[2m2025-09-01 21:50:30.399[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    alter table if exists exam_result 
       add constraint FK1kxnkym7yfaed68mx1p9nujeb 
       foreign key (exam_sheet_id) 
       references exam_sheet
Hibernate: 
    alter table if exists exam_result 
       add constraint FK1kxnkym7yfaed68mx1p9nujeb 
       foreign key (exam_sheet_id) 
       references exam_sheet
[[2m2025-09-01 21:50:30.399[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    alter table if exists exam_result 
       add constraint FK5h2e7spb12bowlcpn9ni2iccg 
       foreign key (submission_id) 
       references exam_submission
Hibernate: 
    alter table if exists exam_result 
       add constraint FK5h2e7spb12bowlcpn9ni2iccg 
       foreign key (submission_id) 
       references exam_submission
[[2m2025-09-01 21:50:30.400[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    alter table if exists exam_result_question 
       add constraint FK5aqnya5vgl4c2nwvpv0ornhdu 
       foreign key (exam_result_id) 
       references exam_result
Hibernate: 
    alter table if exists exam_result_question 
       add constraint FK5aqnya5vgl4c2nwvpv0ornhdu 
       foreign key (exam_result_id) 
       references exam_result
[[2m2025-09-01 21:50:30.401[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    alter table if exists exam_result_question 
       add constraint FKsbejvkmejga9gx8m6hdidiox5 
       foreign key (question_id) 
       references question
Hibernate: 
    alter table if exists exam_result_question 
       add constraint FKsbejvkmejga9gx8m6hdidiox5 
       foreign key (question_id) 
       references question
[[2m2025-09-01 21:50:30.401[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    alter table if exists exam_result_question 
       add constraint FKo6t3vrkoarst5p5wfnssw7ask 
       foreign key (answer_id) 
       references student_answer_sheet
Hibernate: 
    alter table if exists exam_result_question 
       add constraint FKo6t3vrkoarst5p5wfnssw7ask 
       foreign key (answer_id) 
       references student_answer_sheet
[[2m2025-09-01 21:50:30.402[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    alter table if exists exam_sheet_question 
       add constraint FKhhbpusdcfj01oogq0c4s3dfit 
       foreign key (exam_sheet_id) 
       references exam_sheet
Hibernate: 
    alter table if exists exam_sheet_question 
       add constraint FKhhbpusdcfj01oogq0c4s3dfit 
       foreign key (exam_sheet_id) 
       references exam_sheet
[[2m2025-09-01 21:50:30.402[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    alter table if exists exam_sheet_question 
       add constraint FKrd319pw6ublwiqxr5ojji75o4 
       foreign key (question_id) 
       references question
Hibernate: 
    alter table if exists exam_sheet_question 
       add constraint FKrd319pw6ublwiqxr5ojji75o4 
       foreign key (question_id) 
       references question
[[2m2025-09-01 21:50:30.403[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    alter table if exists exam_sheet_selected_unit 
       add constraint FK2xbjk8ujtgcok7pm4ddrmn0ak 
       foreign key (exam_sheet_id) 
       references exam_sheet
Hibernate: 
    alter table if exists exam_sheet_selected_unit 
       add constraint FK2xbjk8ujtgcok7pm4ddrmn0ak 
       foreign key (exam_sheet_id) 
       references exam_sheet
[[2m2025-09-01 21:50:30.403[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    alter table if exists exam_sheet_selected_unit 
       add constraint FK42oxhmr6y5rnn12m7gf4cqcwf 
       foreign key (unit_id) 
       references unit
Hibernate: 
    alter table if exists exam_sheet_selected_unit 
       add constraint FK42oxhmr6y5rnn12m7gf4cqcwf 
       foreign key (unit_id) 
       references unit
[[2m2025-09-01 21:50:30.404[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    alter table if exists exam_submission 
       add constraint FKhpbxc166py57lqe75pkrbw4b5 
       foreign key (exam_id) 
       references exam
Hibernate: 
    alter table if exists exam_submission 
       add constraint FKhpbxc166py57lqe75pkrbw4b5 
       foreign key (exam_id) 
       references exam
[[2m2025-09-01 21:50:30.404[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    alter table if exists exam_submission 
       add constraint FK7skcbvnd69xvhvg5vrs5o028n 
       foreign key (user_id) 
       references users
Hibernate: 
    alter table if exists exam_submission 
       add constraint FK7skcbvnd69xvhvg5vrs5o028n 
       foreign key (user_id) 
       references users
[[2m2025-09-01 21:50:30.405[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    alter table if exists question 
       add constraint FKs1tl5ukggla0y9dkixxfimpwx 
       foreign key (unit_id) 
       references unit
Hibernate: 
    alter table if exists question 
       add constraint FKs1tl5ukggla0y9dkixxfimpwx 
       foreign key (unit_id) 
       references unit
[[2m2025-09-01 21:50:30.405[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    alter table if exists student_answer_sheet 
       add constraint FK63r296id7mv5ydnla6anonx3b 
       foreign key (submission_id) 
       references exam_submission
Hibernate: 
    alter table if exists student_answer_sheet 
       add constraint FK63r296id7mv5ydnla6anonx3b 
       foreign key (submission_id) 
       references exam_submission
[[2m2025-09-01 21:50:30.405[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    alter table if exists student_answer_sheet 
       add constraint FKqow3301uxhfpcrfp3fdheyrt0 
       foreign key (question_id) 
       references question
Hibernate: 
    alter table if exists student_answer_sheet 
       add constraint FKqow3301uxhfpcrfp3fdheyrt0 
       foreign key (question_id) 
       references question
[[2m2025-09-01 21:50:30.406[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    alter table if exists unit 
       add constraint FKjkc14skpio53pwkriddt28c27 
       foreign key (subcategory_id) 
       references unit_subcategory
Hibernate: 
    alter table if exists unit 
       add constraint FKjkc14skpio53pwkriddt28c27 
       foreign key (subcategory_id) 
       references unit_subcategory
[[2m2025-09-01 21:50:30.406[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    alter table if exists unit_subcategory 
       add constraint FKjjsoskeu940jdm1ahqgg7tmhn 
       foreign key (category_id) 
       references unit_category
Hibernate: 
    alter table if exists unit_subcategory 
       add constraint FKjjsoskeu940jdm1ahqgg7tmhn 
       foreign key (category_id) 
       references unit_category
[[2m2025-09-01 21:50:30.407[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mj.LocalContainerEntityManagerFactoryBean[0;39m [2m:[0;39m Initialized JPA EntityManagerFactory for persistence unit 'default'
[[2m2025-09-01 21:50:30.506[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mc.i.springbackend.config.AiServerConfig [0;39m [2m:[0;39m AI 서버 WebClient 설정 시작: baseUrl=http://localhost:8000, connectTimeout=30초, responseTimeout=60초
[[2m2025-09-01 21:50:30.508[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mc.i.springbackend.config.AiServerConfig [0;39m [2m:[0;39m AI 서버 WebClient 설정 완료
[[2m2025-09-01 21:50:30.592[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mc.i.springbackend.config.S3Config       [0;39m [2m:[0;39m S3 클라이언트 생성 시작: region=ap-northeast-2, bucketName=
[[2m2025-09-01 21:50:30.596[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mc.i.springbackend.config.S3Config       [0;39m [2m:[0;39m S3 클라이언트 생성 완료
[[2m2025-09-01 21:50:30.600[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mc.i.springbackend.config.S3Config       [0;39m [2m:[0;39m S3 프리사인드 URL 생성기 생성 시작: region=ap-northeast-2, urlDuration=60분
[[2m2025-09-01 21:50:30.602[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mc.i.springbackend.config.S3Config       [0;39m [2m:[0;39m S3 프리사인드 URL 생성기 생성 완료
[[2m2025-09-01 21:50:30.659[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mc.i.springbackend.config.S3Config       [0;39m [2m:[0;39m S3 비동기 클라이언트 생성 시작: region=ap-northeast-2
[[2m2025-09-01 21:50:30.661[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mc.i.springbackend.config.S3Config       [0;39m [2m:[0;39m S3 비동기 클라이언트 생성 완료
[[2m2025-09-01 21:50:30.665[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mc.i.springbackend.config.S3Config       [0;39m [2m:[0;39m S3 Transfer Manager 생성 시작: minPartSize=8MB
[[2m2025-09-01 21:50:30.666[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mc.i.springbackend.config.S3Config       [0;39m [2m:[0;39m S3 Transfer Manager 생성 완료
[[2m2025-09-01 21:50:30.722[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mr$InitializeUserDetailsManagerConfigurer[0;39m [2m:[0;39m Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService
[[2m2025-09-01 21:50:30.751[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.s.web.DefaultSecurityFilterChain    [0;39m [2m:[0;39m Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
[[2m2025-09-01 21:50:30.803[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.b.a.h2.H2ConsoleAutoConfiguration   [0;39m [2m:[0;39m H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
[[2m2025-09-01 21:50:30.817[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.b.d.a.OptionalLiveReloadServer      [0;39m [2m:[0;39m LiveReload server is running on port 35729
[[2m2025-09-01 21:50:30.827[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.coyote.http11.Http11NioProtocol     [0;39m [2m:[0;39m Starting ProtocolHandler ["http-nio-3055"]
[[2m2025-09-01 21:50:30.829[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.b.w.embedded.tomcat.TomcatWebServer [0;39m [2m:[0;39m Tomcat started on port 3055 (http) with context path '/api'
[[2m2025-09-01 21:50:30.831[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mc.i.s.SpringBackendApplication          [0;39m [2m:[0;39m Started SpringBackendApplication in 0.953 seconds (process running for 1296.998)
[[2m2025-09-01 21:50:30.834[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    /* <criteria> */ select
        u1_0.id,
        u1_0.academy_name,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.grade,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    /* <criteria> */ select
        u1_0.id,
        u1_0.academy_name,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.grade,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
[[2m2025-09-01 21:50:30.899[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mc.i.s.config.TestDataInitializer        [0;39m [2m:[0;39m 테스트 관리자 계정 생성 완료: username=admin, id=01990554-3d73-7ba5-81fe-369c46dfa133
[[2m2025-09-01 21:50:30.899[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mc.i.s.config.TestDataInitializer        [0;39m [2m:[0;39m 테스트 로그인 정보 - 사용자명: admin, 비밀번호: password
[[2m2025-09-01 21:50:30.899[0;39m] [32mDEBUG[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    /* insert for
        com.iroomclass.springbackend.domain.user.entity.User */insert 
    into
        users (academy_name, birth_date, created_at, email, grade, name, password, phone, role, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    /* insert for
        com.iroomclass.springbackend.domain.user.entity.User */insert 
    into
        users (academy_name, birth_date, created_at, email, grade, name, password, phone, role, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[[2m2025-09-01 21:50:30.901[0;39m] [32m INFO[0;39m [35m3096282[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.ConditionEvaluationDeltaLoggingListener[0;39m [2m:[0;39m Condition evaluation unchanged

> Task :bootRun FAILED

FAILURE: Build failed with an exception.

* What went wrong:
Execution failed for task ':bootRun'.
> Process 'command '/usr/lib/jvm/java-21-openjdk-amd64/bin/java'' finished with non-zero exit value 137

* Try:
> Run with --stacktrace option to get the stack trace.
> Run with --info or --debug option to get more log output.
> Run with --scan to get full insights.
> Get more help at https://help.gradle.org.

BUILD FAILED in 33m 42s
4 actionable tasks: 3 executed, 1 up-to-date
