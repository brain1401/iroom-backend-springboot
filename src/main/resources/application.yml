# 서버 설정
server:
  port: 3055

  servlet:
    context-path: /api

spring:
  application:
    name: spring-backend

  # 데이터베이스 연결 설정
  # 환경 변수를 사용한 설정: DB_URL, DB_USERNAME, DB_PASSWORD
  datasource:
    url: ${DB_URL:jdbc:mysql://project-db-campus.smhrd.com:3307/campus_25SW_FS_p3_4}
    username: ${DB_USERNAME:campus_25SW_FS_p3_4}
    password: ${DB_PASSWORD:}
    driver-class-name: com.mysql.cj.jdbc.Driver
    hikari:
      maximum-pool-size: 10
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000

  # JPA 설정
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
        "[format_sql]": true
        "[use_sql_comments]": true
    open-in-view: false
    generate-ddl: false

  # Redis 설정 (캐싱용)
  data:
    redis:
      host: localhost
      port: 6379
      timeout: 2000ms

  # 개발 환경 설정
  devtools:
    restart:
      enabled: true

  output:
    ansi:
      enabled: ALWAYS

# 로깅 설정
logging:
  file:
    path: logs
  level:
    "[org.hibernate.SQL]": DEBUG
    "[org.hibernate.type.descriptor.sql.BasicBinder]": TRACE
    "[com.iroomclass.springbackend]": DEBUG

# AI 서버 설정
ai:
  server:
    base-url: ${AI_SERVER_URL:http://localhost:8000}
    connect-timeout: 30
    response-timeout: 60
    max-in-memory-size: 50

# AWS S3 설정
aws:
  s3:
    region: ${AWS_S3_REGION:ap-northeast-2}
    bucket-name: ${AWS_S3_BUCKET_NAME:}
    presigned-url-duration: ${AWS_S3_PRESIGNED_URL_DURATION:60}
    multipart-min-part-size: ${AWS_S3_MULTIPART_MIN_PART_SIZE:8}

# Swagger/OpenAPI 설정
springdoc:
  api-docs:
    path: /v3/api-docs
    enabled: true
  swagger-ui:
    path: /swagger-ui.html
    enabled: true
    try-it-out-enabled: true
    operations-sorter: alpha
    tags-sorter: alpha
  show-actuator: false
