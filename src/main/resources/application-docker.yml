# =============================================================================
# Spring Boot Configuration for Docker Environment
# =============================================================================

spring:
  # Application info
  application:
    name: iroom-backend
  
  # Profile
  profiles:
    active: docker
  
  # Database configuration
  datasource:
    url: jdbc:mysql://${DB_HOST:mysql}:${DB_PORT:3306}/${DB_NAME:iroom_backend_db}?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=Asia/Seoul&characterEncoding=UTF-8
    username: ${DB_USERNAME:iroom_user}
    password: ${DB_PASSWORD:iroom_password}
    driver-class-name: com.mysql.cj.jdbc.Driver
    hikari:
      maximum-pool-size: 10
      minimum-idle: 5
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
      validation-timeout: 5000
      leak-detection-threshold: 60000
  
  # JPA/Hibernate configuration
  jpa:
    database: mysql
    database-platform: org.hibernate.dialect.MySQL8Dialect
    hibernate:
      ddl-auto: update
      naming:
        physical-strategy: org.hibernate.boot.model.naming.SnakeCasePhysicalNamingStrategy
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
        format_sql: false
        use_sql_comments: false
        jdbc:
          batch_size: 20
          batch_versioned_data: true
        order_inserts: true
        order_updates: true
        connection:
          provider_disables_autocommit: true
    show-sql: false
  
  # Redis configuration
  redis:
    host: ${REDIS_HOST:redis}
    port: ${REDIS_PORT:6379}
    password: redis_password
    database: 0
    timeout: 2000ms
    lettuce:
      pool:
        max-active: 20
        max-idle: 10
        min-idle: 5
        max-wait: -1ms
      shutdown-timeout: 100ms
  
  # Cache configuration
  cache:
    type: redis
    redis:
      time-to-live: 1h
      cache-null-values: false
      use-key-prefix: true
      key-prefix: "iroom:cache:"
  
  # Security configuration
  security:
    require-ssl: false
  
  # Jackson configuration
  jackson:
    serialization:
      write-dates-as-timestamps: false
      fail-on-empty-beans: false
    deserialization:
      fail-on-unknown-properties: false
    time-zone: Asia/Seoul
    date-format: yyyy-MM-dd HH:mm:ss

# Server configuration
server:
  port: 3055
  servlet:
    context-path: /api
    encoding:
      charset: UTF-8
      enabled: true
      force: true
  compression:
    enabled: true
    mime-types: text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
  error:
    include-message: always
    include-binding-errors: always
    include-stacktrace: on_param
    include-exception: false

# Logging configuration
logging:
  level:
    root: INFO
    "[com.iroomclass.springbackend]": INFO
    "[org.springframework.web]": INFO
    "[org.springframework.security]": INFO
    "[org.hibernate.SQL]": WARN
    "[org.hibernate.type.descriptor.sql.BasicBinder]": WARN
    "[com.zaxxer.hikari]": INFO
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"
  file:
    path: logs

# Management and monitoring
management:
  endpoints:
    web:
      base-path: /system
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: when-authorized
      probes:
        enabled: true
  health:
    redis:
      enabled: true
    db:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true

# SpringDoc OpenAPI configuration
springdoc:
  api-docs:
    path: /v3/api-docs
  swagger-ui:
    path: /swagger-ui.html
    enabled: true
    operations-sorter: method
    tags-sorter: alpha
    display-request-duration: true
    display-operation-id: true
  show-actuator: false

# Application specific configuration
app:
  cors:
    allowed-origins: "*"
    allowed-methods: "GET,POST,PUT,DELETE,PATCH,OPTIONS"
    allowed-headers: "*"
    allow-credentials: false
  
  jwt:
    secret: ${JWT_SECRET:iroom-backend-jwt-secret-key-for-docker-environment-2024}
    expiration: 86400000 # 24 hours in milliseconds
  
  file:
    upload-dir: /tmp/uploads
    max-file-size: 10MB
    max-request-size: 10MB