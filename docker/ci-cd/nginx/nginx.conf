# =============================================================================
# Nginx Configuration for Blue-Green Deployment
# =============================================================================
# 포트 스위칭을 통한 무중단 배포 지원
# - 8080/8081 포트 간 전환
# - 헬스체크 기반 자동 전환
# - 로드밸런싱 없는 단순 프록시
# =============================================================================

user www-data;
worker_processes auto;
pid /run/nginx.pid;
error_log /var/log/nginx/error.log warn;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # 로깅 형식 정의
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                   '$status $body_bytes_sent "$http_referer" '
                   '"$http_user_agent" "$http_x_forwarded_for" '
                   'rt=$request_time ut="$upstream_response_time"';

    access_log /var/log/nginx/access.log main;

    # 성능 최적화
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 16M;

    # Gzip 압축
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # 업스트림 서버 정의 - Blue/Green 포트
    upstream spring_backend_blue {
        server localhost:8080 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream spring_backend_green {
        server localhost:8081 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    # 헬스체크 설정
    upstream backend {
        # 기본적으로 blue 환경 사용
        # 배포 스크립트가 동적으로 변경함
        server localhost:8080 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    # 추가 설정 파일 포함
    include /etc/nginx/conf.d/*.conf;

    # 기본 서버 블록
    server {
        listen 80 default_server;
        listen [::]:80 default_server;
        server_name _;

        # 보안 헤더
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload";

        # API 프록시
        location /api/ {
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # 연결 설정
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
            proxy_busy_buffers_size 8k;
            
            # Keep-alive 설정
            proxy_http_version 1.1;
            proxy_set_header Connection "";
        }

        # 헬스체크 전용 엔드포인트 (직접 접근)
        location /health/blue {
            proxy_pass http://localhost:8080/api/system/health;
            proxy_connect_timeout 5s;
            proxy_send_timeout 5s;
            proxy_read_timeout 5s;
        }

        location /health/green {
            proxy_pass http://localhost:8081/api/system/health;
            proxy_connect_timeout 5s;
            proxy_send_timeout 5s;
            proxy_read_timeout 5s;
        }

        # Nginx 상태 페이지 (모니터링용)
        location /nginx-status {
            stub_status on;
            allow 127.0.0.1;
            allow 10.0.0.0/8;
            allow 172.16.0.0/12;
            allow 192.168.0.0/16;
            deny all;
        }

        # 정적 파일 서빙 (프론트엔드용)
        location / {
            root /var/www/html;
            index index.html index.htm;
            try_files $uri $uri/ @fallback;
        }

        location @fallback {
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # 오류 페이지
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        
        location = /50x.html {
            root /var/www/html;
        }
    }
}