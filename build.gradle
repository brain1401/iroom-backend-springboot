plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.5'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.iroomclass'
version = '0.0.1-SNAPSHOT'
description = 'Demo project for Spring Boot'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

compileJava {

}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	
	// Swagger/OpenAPI 문서 자동 생성 
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.9'
	
	// YAML 변환을 위한 Jackson YAML 모듈
	implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.19.2'
	
	// UUID v7 생성을 위한 JUG 라이브러리
	implementation 'com.fasterxml.uuid:java-uuid-generator:5.1.0'
	
	// QR 코드 생성 라이브러리
	implementation 'com.google.zxing:core:3.5.3'
	implementation 'com.google.zxing:javase:3.5.3'
	
	// HTML to PDF 변환 라이브러리
  implementation 'io.github.openhtmltopdf:openhtmltopdf-core:1.1.30'
  implementation 'io.github.openhtmltopdf:openhtmltopdf-pdfbox:1.1.30'
	
	// HTML 정규화 및 정리 라이브러리
	implementation 'org.jsoup:jsoup:1.21.2'
	
	// LaTeX 수식 렌더링 라이브러리
	implementation 'org.scilab.forge:jlatexmath:1.0.7'
	implementation 'org.scilab.forge:jlatexmath-font-greek:1.0.7'
	implementation 'org.scilab.forge:jlatexmath-font-cyrillic:1.0.7'
	
	// AWS S3 SDK for Java v2 - PDF 파일 업로드를 위한 S3 클라이언트
	implementation 'software.amazon.awssdk:s3:2.32.14'
	implementation 'software.amazon.awssdk:s3-transfer-manager:2.32.14'
	implementation 'software.amazon.awssdk.crt:aws-crt:0.33.11'
	
	
	// MySQL 드라이버 (최신 버전)
	runtimeOnly 'com.mysql:mysql-connector-j:9.3.0'
	
	// Lombok annotation processing (표준 방식)
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.boot:spring-boot-starter-webflux'
	testImplementation 'com.squareup.okhttp3:mockwebserver:4.12.0'
	testRuntimeOnly 'com.h2database:h2'
	runtimeOnly 'com.h2database:h2'  // 로컬 테스트용
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}

// 메인 클래스 설정
bootJar {
	mainClass = 'com.iroomclass.springbackend.SpringBackendApplication'
}
